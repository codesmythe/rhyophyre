00001                                           !BCC_EOS
00002                                           !BCC_EOS
00003                                           !BCC_EOS
00004                                           !BCC_EOS
00005                                           !BCC_EOS
00006                                           !BCC_EOS
00007                                           !BCC_EOS
00008                                           !BCC_EOS
00009                                           !BCC_EOS
00010                                           !BCC_EOS
00011                                           !BCC_EOS
00012                                           !BCC_EOS
00013                                           !BCC_EOS
00014                                           !BCC_EOS
00015                                           !BCC_EOS
00016                                           !BCC_EOS
00017                                           !BCC_EOS
00018                                           !BCC_EOS
00019                                           !BCC_EOS
00020                                           !BCC_EOS
00021                                           !BCC_EOS
00022                                           !BCC_EOS
00023                                           !BCC_EOS
00024                                           !BCC_EOS
00025                                           !BCC_EOS
00026                                           !BCC_EOS
00027                                           !BCC_EOS
00028                                           !BCC_EOS
00029                                           !BCC_EOS
00030                                           !BCC_EOS
00031                                           !BCC_EOS
00032                                           !BCC_EOS
00033                                           !BCC_EOS
00034                                           !BCC_EOS
00035                                           !BCC_EOS
00036                                           !BCC_EOS
00037                                           !BCC_EOS
00038                                           !BCC_EOS
00039                                           !BCC_EOS
00040                                           !BCC_EOS
00041                                           !BCC_EOS
00042                                           !BCC_EOS
00043                                           !BCC_EOS
00044                                           !BCC_EOS
00045                                           !BCC_EOS
00046                                           !BCC_EOS
00047                                           !BCC_EOS
00048                                           !BCC_EOS
00049                                           !BCC_EOS
00050                                           !BCC_EOS
00051                                           !BCC_EOS
00052                                           !BCC_EOS
00053                                           !BCC_EOS
00054                                           !BCC_EOS
00055                                           !BCC_EOS
00056                                           !BCC_EOS
00057                                           !BCC_EOS
00058                                           !BCC_EOS
00059                                           !BCC_EOS
00060                                           !BCC_EOS
00061                                           !BCC_EOS
00062                                           !BCC_EOS
00063                                           !BCC_EOS
00064                                           !BCC_EOS
00065                                           !BCC_EOS
00066                                           !BCC_EOS
00067                                           !BCC_EOS
00068                                           !BCC_EOS
00069                                           !BCC_EOS
00070                                           !BCC_EOS
00071                                           !BCC_EOS
00072                                           !BCC_EOS
00073                                           !BCC_EOS
00074                                           !BCC_EOS
00075                                           !BCC_EOS
00076                                           !BCC_EOS
00077                                           !BCC_EOS
00078                                           !BCC_EOS
00079                                           !BCC_EOS
00080                                           !BCC_EOS
00081                                           !BCC_EOS
00082                                           !BCC_EOS
00083                                           !BCC_EOS
00084                                           !BCC_EOS
00085                                           !BCC_EOS
00086                                           !BCC_EOS
00087                                           !BCC_EOS
00088                                           !BCC_EOS
00089                                           !BCC_EOS
00090                                           !BCC_EOS
00091                                           !BCC_EOS
00092                                           !BCC_EOS
00093                                           !BCC_EOS
00094                                           !BCC_ASM
00095 0000                                      .text
00096                       00000000>           _inp:
00097 0000           55                         push bp
00098 0001           89E5                       mov bp,sp
00099 0003           52                         push dx
00100 0004           8B56         04            mov dx,4[bp]
00101 0007           EC                         in al,dx
00102 0008           30E4                       xor ah,ah
00103 000A           5A                         pop dx
00104 000B           5D                         pop bp
00105 000C           C3                         ret    
00106                                           !BCC_ENDASM
00107                                           !BCC_EOS
00108                                           !BCC_ASM
00109 000D                                      .text
00110                       0000000D>           _outp:
00111 000D           55                         push bp
00112 000E           89E5                       mov	bp,sp
00113 0010           52                         push dx
00114 0011           8B56         04            mov dx,4[bp]
00115 0014           8A46         06            mov	al,6[bp]
00116 0017           EE                         out dx,al
00117 0018           5A                         pop dx
00118 0019           5D                         pop bp
00119 001A           C3                         ret
00120                                           !BCC_ENDASM
00121                                           export	_gdc_putc
00122                       0000001B>           _gdc_putc:
00123                                           !BCC_EOS
00124 001B           55                         push	bp
00125 001C           89E5                       mov	bp,sp
00126                                           if gdc_putc.off=0
00127                                           push	di
00128                                           push	si
00129                                           endif
00130                       0000001E>           .3:
00131                                           !BCC_EOS
00132                       0000001E>           .2:
00133 001E           B8                   04B0  mov	ax,#$4B0
00134 0021           50                         push	ax
00135 0022           E8         FFDB            call	_inp
00136 0025           44                         inc	sp
00137 0026           44                         inc	sp
00138 0027           24                     02  and	al,*2
00139 0029           75           F3            jne	.3
00140                       0000002B>           .4:
00141                       0000002B>           .1:
00142 002B           8A46         04            mov	al,4[bp]
00143 002E           30E4                       xor	ah,ah
00144 0030           50                         push	ax
00145 0031           B8                   04B1  mov	ax,#$4B1
00146 0034           50                         push	ax
00147 0035           E8         FFD5            call	_outp
00148 0038           83C4                   04  add	sp,*4
00149                                           !BCC_EOS
00150                                           if gdc_putc.off=0
00151                                           pop	si
00152                                           pop	di
00153                                           endif
00154 003B           5D                         pop	bp
00155 003C           C3                         ret
00156                       00000004            gdc_putc.off = 4
00157                                           export	_gdc_putp
00158                       0000003D>           _gdc_putp:
00159                                           !BCC_EOS
00160 003D           55                         push	bp
00161 003E           89E5                       mov	bp,sp
00162                                           if gdc_putp.off=0
00163                                           push	di
00164                                           push	si
00165                                           endif
00166                       00000040>           .7:
00167                                           !BCC_EOS
00168                       00000040>           .6:
00169 0040           B8                   04B0  mov	ax,#$4B0
00170 0043           50                         push	ax
00171 0044           E8         FFB9            call	_inp
00172 0047           44                         inc	sp
00173 0048           44                         inc	sp
00174 0049           24                     02  and	al,*2
00175 004B           75           F3            jne	.7
00176                       0000004D>           .8:
00177                       0000004D>           .5:
00178 004D           8A46         04            mov	al,4[bp]
00179 0050           30E4                       xor	ah,ah
00180 0052           50                         push	ax
00181 0053           B8                   04B0  mov	ax,#$4B0
00182 0056           50                         push	ax
00183 0057           E8         FFB3            call	_outp
00184 005A           83C4                   04  add	sp,*4
00185                                           !BCC_EOS
00186                                           if gdc_putp.off=0
00187                                           pop	si
00188                                           pop	di
00189                                           endif
00190 005D           5D                         pop	bp
00191 005E           C3                         ret
00192                       00000004            gdc_putp.off = 4
00193                                           export	_gdc_sync_params
00194                       0000005F>           _gdc_sync_params:
00195                                           !BCC_EOS
00196                                           !BCC_EOS
00197                                           !BCC_EOS
00198                                           !BCC_EOS
00199                                           !BCC_EOS
00200                                           !BCC_EOS
00201                                           !BCC_EOS
00202                                           !BCC_EOS
00203                                           !BCC_EOS
00204                                           !BCC_EOS
00205                                           !BCC_EOS
00206                                           !BCC_EOS
00207                                           !BCC_EOS
00208                                           !BCC_EOS
00209 005F           55                         push	bp
00210 0060           89E5                       mov	bp,sp
00211                                           if gdc_sync_params.off=0
00212 0062           57                         push	di
00213 0063           56                         push	si
00214                                           endif
00215 0064           83C4                   EA  add	sp,*-$16
00216 0067           C646         E7        12  mov	byte ptr -$19+gdc_sync_params.off[bp],*$12
00217                                           !BCC_EOS
00218 006B           A1         0000>           mov	ax,[_Xmax]
00219 006E           B1                     04  mov	cl,*4
00220 0070           D3E8                       shr	ax,cl
00221 0072           48                         dec	ax
00222 0073           48                         dec	ax
00223 0074           8846         E8            mov	-$18+gdc_sync_params.off[bp],al
00224                                           !BCC_EOS
00225 0077           A0         0000>           mov	al,[_HS]
00226 007A           30E4                       xor	ah,ah
00227 007C           48                         dec	ax
00228 007D           8846         E9            mov	-$17+gdc_sync_params.off[bp],al
00229                                           !BCC_EOS
00230 0080           C746         F8      000A  mov	word ptr -8+gdc_sync_params.off[bp],*$A
00231                                           !BCC_EOS
00232 0085           C746         FA      0002  mov	word ptr -6+gdc_sync_params.off[bp],*2
00233                                           !BCC_EOS
00234 008A           B8                   002C  mov	ax,*$2C
00235 008D           2B46         F8            sub	ax,-8+gdc_sync_params.off[bp]
00236 0090           2B46         FA            sub	ax,-6+gdc_sync_params.off[bp]
00237 0093           8946         F6            mov	-$A+gdc_sync_params.off[bp],ax
00238                                           !BCC_EOS
00239 0096           8A46         FA            mov	al,-6+gdc_sync_params.off[bp]
00240 0099           24                     07  and	al,*7
00241 009B           8846         EA            mov	-$16+gdc_sync_params.off[bp],al
00242                                           !BCC_EOS
00243 009E           8B46         FA            mov	ax,-6+gdc_sync_params.off[bp]
00244 00A1           B1                     03  mov	cl,*3
00245 00A3           D3E8                       shr	ax,cl
00246 00A5           8846         EB            mov	-$15+gdc_sync_params.off[bp],al
00247                                           !BCC_EOS
00248 00A8           A0         0000>           mov	al,[_HFP]
00249 00AB           30E4                       xor	ah,ah
00250 00AD           48                         dec	ax
00251 00AE           8846         EC            mov	-$14+gdc_sync_params.off[bp],al
00252                                           !BCC_EOS
00253 00B1           A0         0000>           mov	al,[_HBP]
00254 00B4           30E4                       xor	ah,ah
00255 00B6           48                         dec	ax
00256 00B7           8846         ED            mov	-$13+gdc_sync_params.off[bp],al
00257                                           !BCC_EOS
00258 00BA           8A46         F8            mov	al,-8+gdc_sync_params.off[bp]
00259 00BD           8846         EE            mov	-$12+gdc_sync_params.off[bp],al
00260                                           !BCC_EOS
00261 00C0           A0         0000>           mov	al,[_Ymax]
00262 00C3           8846         EF            mov	-$11+gdc_sync_params.off[bp],al
00263                                           !BCC_EOS
00264 00C6           A1         0000>           mov	ax,[_Ymax]
00265 00C9           88E0                       mov	al,ah
00266 00CB           30E4                       xor	ah,ah
00267 00CD           8846         F0            mov	-$10+gdc_sync_params.off[bp],al
00268                                           !BCC_EOS
00269 00D0           8A46         F6            mov	al,-$A+gdc_sync_params.off[bp]
00270 00D3           8846         F1            mov	-$F+gdc_sync_params.off[bp],al
00271                                           !BCC_EOS
00272 00D6           8D5E         E7            lea	bx,-$19+gdc_sync_params.off[bp]
00273 00D9           895E         F2            mov	-$E+gdc_sync_params.off[bp],bx
00274                                           !BCC_EOS
00275 00DC           30C0                       xor	al,al
00276 00DE           8846         F5            mov	-$B+gdc_sync_params.off[bp],al
00277                                           !BCC_EOS
00278                                           !BCC_EOS
00279 00E1           EB           17            jmp .B
00280                       000000E3>           .C:
00281 00E3           8B5E         F2            mov	bx,-$E+gdc_sync_params.off[bp]
00282 00E6           FF46         F2            inc	word ptr -$E+gdc_sync_params.off[bp]
00283 00E9           8A07                       mov	al,[bx]
00284 00EB           30E4                       xor	ah,ah
00285 00ED           50                         push	ax
00286 00EE           E8         FF4C            call	_gdc_putp
00287 00F1           44                         inc	sp
00288 00F2           44                         inc	sp
00289                                           !BCC_EOS
00290                       000000F3>           .A:
00291 00F3           8A46         F5            mov	al,-$B+gdc_sync_params.off[bp]
00292 00F6           40                         inc	ax
00293 00F7           8846         F5            mov	-$B+gdc_sync_params.off[bp],al
00294                       000000FA>           .B:
00295 00FA           807E         F5        0B  cmp	byte ptr -$B+gdc_sync_params.off[bp],*$B
00296 00FE           72           E3            jb 	.C
00297                       00000100>           .D:
00298                       00000100>           .9:
00299 0100           83C4                   16  add	sp,*$16
00300                                           if gdc_sync_params.off=0
00301 0103           5E                         pop	si
00302 0104           5F                         pop	di
00303                                           endif
00304 0105           5D                         pop	bp
00305 0106           C3                         ret
00306                                           ! Register BX used in function gdc_sync_params
00307                       00000000            gdc_sync_params.off = 0
00308                                           export	_gdc_display
00309                       00000107>           _gdc_display:
00310                                           !BCC_EOS
00311 0107           55                         push	bp
00312 0108           89E5                       mov	bp,sp
00313                                           if gdc_display.off=0
00314                                           push	di
00315                                           push	si
00316                                           endif
00317 010A           8A46         04            mov	al,4[bp]
00318 010D           0C                     0C  or	al,*$C
00319 010F           30E4                       xor	ah,ah
00320 0111           50                         push	ax
00321 0112           E8         FF06            call	_gdc_putc
00322 0115           44                         inc	sp
00323 0116           44                         inc	sp
00324                                           !BCC_EOS
00325                                           if gdc_display.off=0
00326                                           pop	si
00327                                           pop	di
00328                                           endif
00329 0117           5D                         pop	bp
00330 0118           C3                         ret
00331                       00000004            gdc_display.off = 4
00332                                           export	_gdc_sync
00333                       00000119>           _gdc_sync:
00334                                           !BCC_EOS
00335 0119           55                         push	bp
00336 011A           89E5                       mov	bp,sp
00337                                           if gdc_sync.off=0
00338                                           push	di
00339                                           push	si
00340                                           endif
00341 011C           8A46         04            mov	al,4[bp]
00342 011F           0C                     0E  or	al,*$E
00343 0121           30E4                       xor	ah,ah
00344 0123           50                         push	ax
00345 0124           E8         FEF4            call	_gdc_putc
00346 0127           44                         inc	sp
00347 0128           44                         inc	sp
00348                                           !BCC_EOS
00349 0129           E8         FF33            call	_gdc_sync_params
00350                                           !BCC_EOS
00351                                           if gdc_sync.off=0
00352                                           pop	si
00353                                           pop	di
00354                                           endif
00355 012C           5D                         pop	bp
00356 012D           C3                         ret
00357                       00000004            gdc_sync.off = 4
00358                                           export	_gdc_reset
00359                       0000012E>           _gdc_reset:
00360 012E           55                         push	bp
00361 012F           89E5                       mov	bp,sp
00362                                           if gdc_reset.off=0
00363                                           push	di
00364                                           push	si
00365                                           endif
00366 0131           31C0                       xor	ax,ax
00367 0133           50                         push	ax
00368 0134           B8                   04B1  mov	ax,#$4B1
00369 0137           50                         push	ax
00370 0138           E8         FED2            call	_outp
00371 013B           83C4                   04  add	sp,*4
00372                                           !BCC_EOS
00373 013E           E8         FF1E            call	_gdc_sync_params
00374                                           !BCC_EOS
00375                                           if gdc_reset.off=0
00376                                           pop	si
00377                                           pop	di
00378                                           endif
00379 0141           5D                         pop	bp
00380 0142           C3                         ret
00381                       00000004            gdc_reset.off = 4
00382                                           export	_gdc_vsync
00383                       00000143>           _gdc_vsync:
00384                                           !BCC_EOS
00385 0143           55                         push	bp
00386 0144           89E5                       mov	bp,sp
00387                                           if gdc_vsync.off=0
00388                                           push	di
00389                                           push	si
00390                                           endif
00391 0146           8A46         04            mov	al,4[bp]
00392 0149           0C                     6E  or	al,*$6E
00393 014B           30E4                       xor	ah,ah
00394 014D           50                         push	ax
00395 014E           E8         FECA            call	_gdc_putc
00396 0151           44                         inc	sp
00397 0152           44                         inc	sp
00398                                           !BCC_EOS
00399                                           if gdc_vsync.off=0
00400                                           pop	si
00401                                           pop	di
00402                                           endif
00403 0153           5D                         pop	bp
00404 0154           C3                         ret
00405                       00000004            gdc_vsync.off = 4
00406                                           export	_gdc_cchar
00407                       00000155>           _gdc_cchar:
00408 0155           55                         push	bp
00409 0156           89E5                       mov	bp,sp
00410                                           if gdc_cchar.off=0
00411                                           push	di
00412                                           push	si
00413                                           endif
00414 0158           B8                   004B  mov	ax,*$4B
00415 015B           50                         push	ax
00416 015C           E8         FEBC            call	_gdc_putc
00417 015F           44                         inc	sp
00418 0160           44                         inc	sp
00419                                           !BCC_EOS
00420 0161           31C0                       xor	ax,ax
00421 0163           50                         push	ax
00422 0164           E8         FED6            call	_gdc_putp
00423 0167           44                         inc	sp
00424 0168           44                         inc	sp
00425                                           !BCC_EOS
00426 0169           31C0                       xor	ax,ax
00427 016B           50                         push	ax
00428 016C           E8         FECE            call	_gdc_putp
00429 016F           44                         inc	sp
00430 0170           44                         inc	sp
00431                                           !BCC_EOS
00432 0171           31C0                       xor	ax,ax
00433 0173           50                         push	ax
00434 0174           E8         FEC6            call	_gdc_putp
00435 0177           44                         inc	sp
00436 0178           44                         inc	sp
00437                                           !BCC_EOS
00438                                           if gdc_cchar.off=0
00439                                           pop	si
00440                                           pop	di
00441                                           endif
00442 0179           5D                         pop	bp
00443 017A           C3                         ret
00444                       00000004            gdc_cchar.off = 4
00445                                           export	_gdc_pitch
00446                       0000017B>           _gdc_pitch:
00447                                           !BCC_EOS
00448 017B           55                         push	bp
00449 017C           89E5                       mov	bp,sp
00450                                           if gdc_pitch.off=0
00451                                           push	di
00452                                           push	si
00453                                           endif
00454 017E           B8                   0047  mov	ax,*$47
00455 0181           50                         push	ax
00456 0182           E8         FE96            call	_gdc_putc
00457 0185           44                         inc	sp
00458 0186           44                         inc	sp
00459                                           !BCC_EOS
00460 0187           8A46         04            mov	al,4[bp]
00461 018A           30E4                       xor	ah,ah
00462 018C           50                         push	ax
00463 018D           E8         FEAD            call	_gdc_putp
00464 0190           44                         inc	sp
00465 0191           44                         inc	sp
00466                                           !BCC_EOS
00467                                           if gdc_pitch.off=0
00468                                           pop	si
00469                                           pop	di
00470                                           endif
00471 0192           5D                         pop	bp
00472 0193           C3                         ret
00473                       00000004            gdc_pitch.off = 4
00474                                           export	_gdc_pram
00475                       00000194>           _gdc_pram:
00476                                           !BCC_EOS
00477                                           !BCC_EOS
00478                                           !BCC_EOS
00479 0194           55                         push	bp
00480 0195           89E5                       mov	bp,sp
00481                                           if gdc_pram.off=0
00482 0197           57                         push	di
00483 0198           56                         push	si
00484                                           endif
00485 0199           8A46         04            mov	al,4[bp]
00486 019C           24                     0F  and	al,*$F
00487 019E           30E4                       xor	ah,ah
00488 01A0           05                   0070  add	ax,*$70
00489 01A3           50                         push	ax
00490 01A4           E8         FE74            call	_gdc_putc
00491 01A7           44                         inc	sp
00492 01A8           44                         inc	sp
00493                                           !BCC_EOS
00494 01A9           EB           10            jmp .F
00495                       000001AB>           .10:
00496 01AB           8B5E         06            mov	bx,6[bp]
00497 01AE           FF46         06            inc	word ptr 6[bp]
00498 01B1           8A07                       mov	al,[bx]
00499 01B3           30E4                       xor	ah,ah
00500 01B5           50                         push	ax
00501 01B6           E8         FE84            call	_gdc_putp
00502 01B9           44                         inc	sp
00503 01BA           44                         inc	sp
00504                                           !BCC_EOS
00505                       000001BB>           .F:
00506 01BB           8A46         08            mov	al,8[bp]
00507 01BE           48                         dec	ax
00508 01BF           8846         08            mov	8[bp],al
00509 01C2           40                         inc	ax
00510 01C3           84C0                       test	al,al
00511 01C5           75           E4            jne	.10
00512                       000001C7>           .11:
00513                       000001C7>           .E:
00514                                           if gdc_pram.off=0
00515 01C7           5E                         pop	si
00516 01C8           5F                         pop	di
00517                                           endif
00518 01C9           5D                         pop	bp
00519 01CA           C3                         ret
00520                                           ! Register BX used in function gdc_pram
00521                       00000000            gdc_pram.off = 0
00522                                           export	_gdc_pattern
00523                       000001CB>           _gdc_pattern:
00524                                           !BCC_EOS
00525 01CB           55                         push	bp
00526 01CC           89E5                       mov	bp,sp
00527                                           if gdc_pattern.off=0
00528 01CE           57                         push	di
00529 01CF           56                         push	si
00530                                           endif
00531 01D0           B8                   0002  mov	ax,*2
00532 01D3           50                         push	ax
00533 01D4           8D5E         04            lea	bx,4[bp]
00534 01D7           53                         push	bx
00535 01D8           B8                   0008  mov	ax,*8
00536 01DB           50                         push	ax
00537 01DC           E8         FFB5            call	_gdc_pram
00538 01DF           83C4                   06  add	sp,*6
00539                                           !BCC_EOS
00540                                           if gdc_pattern.off=0
00541 01E2           5E                         pop	si
00542 01E3           5F                         pop	di
00543                                           endif
00544 01E4           5D                         pop	bp
00545 01E5           C3                         ret
00546                                           ! Register BX used in function gdc_pattern
00547                       00000000            gdc_pattern.off = 0
00548                                           export	_gdc_zoom_display
00549                       000001E6>           _gdc_zoom_display:
00550                                           !BCC_EOS
00551 01E6           55                         push	bp
00552 01E7           89E5                       mov	bp,sp
00553                                           if gdc_zoom_display.off=0
00554                                           push	di
00555                                           push	si
00556                                           endif
00557 01E9           B8                   0046  mov	ax,*$46
00558 01EC           50                         push	ax
00559 01ED           E8         FE2B            call	_gdc_putc
00560 01F0           44                         inc	sp
00561 01F1           44                         inc	sp
00562                                           !BCC_EOS
00563 01F2           8A46         04            mov	al,4[bp]
00564 01F5           30E4                       xor	ah,ah
00565 01F7           48                         dec	ax
00566 01F8           B1                     04  mov	cl,*4
00567 01FA           D3E0                       shl	ax,cl
00568 01FC           50                         push	ax
00569 01FD           A0         0000>           mov	al,[_Zoom_Draw]
00570 0200           30E4                       xor	ah,ah
00571 0202           48                         dec	ax
00572 0203           0B46         FE            or	ax,-6+gdc_zoom_display.off[bp]
00573 0206           44                         inc	sp
00574 0207           44                         inc	sp
00575 0208           50                         push	ax
00576 0209           E8         FE31            call	_gdc_putp
00577 020C           44                         inc	sp
00578 020D           44                         inc	sp
00579                                           !BCC_EOS
00580 020E           8A46         04            mov	al,4[bp]
00581 0211           A2         0000>           mov	[_Zoom_Display],al
00582                                           !BCC_EOS
00583                                           if gdc_zoom_display.off=0
00584                                           pop	si
00585                                           pop	di
00586                                           endif
00587 0214           5D                         pop	bp
00588 0215           C3                         ret
00589                       00000004            gdc_zoom_display.off = 4
00590                                           export	_gdc_zoom_draw
00591                       00000216>           _gdc_zoom_draw:
00592                                           !BCC_EOS
00593 0216           55                         push	bp
00594 0217           89E5                       mov	bp,sp
00595                                           if gdc_zoom_draw.off=0
00596                                           push	di
00597                                           push	si
00598                                           endif
00599 0219           B8                   0046  mov	ax,*$46
00600 021C           50                         push	ax
00601 021D           E8         FDFB            call	_gdc_putc
00602 0220           44                         inc	sp
00603 0221           44                         inc	sp
00604                                           !BCC_EOS
00605 0222           A0         0000>           mov	al,[_Zoom_Display]
00606 0225           30E4                       xor	ah,ah
00607 0227           48                         dec	ax
00608 0228           B1                     04  mov	cl,*4
00609 022A           D3E0                       shl	ax,cl
00610 022C           50                         push	ax
00611 022D           8A46         04            mov	al,4[bp]
00612 0230           30E4                       xor	ah,ah
00613 0232           48                         dec	ax
00614 0233           0B46         FE            or	ax,-6+gdc_zoom_draw.off[bp]
00615 0236           44                         inc	sp
00616 0237           44                         inc	sp
00617 0238           50                         push	ax
00618 0239           E8         FE01            call	_gdc_putp
00619 023C           44                         inc	sp
00620 023D           44                         inc	sp
00621                                           !BCC_EOS
00622 023E           8A46         04            mov	al,4[bp]
00623 0241           A2         0000>           mov	[_Zoom_Draw],al
00624                                           !BCC_EOS
00625                                           if gdc_zoom_draw.off=0
00626                                           pop	si
00627                                           pop	di
00628                                           endif
00629 0244           5D                         pop	bp
00630 0245           C3                         ret
00631                       00000004            gdc_zoom_draw.off = 4
00632                                           export	_gdc_setcursor
00633                       00000246>           _gdc_setcursor:
00634                                           !BCC_EOS
00635                                           !BCC_EOS
00636                                           !BCC_EOS
00637                                           !BCC_EOS
00638 0246           55                         push	bp
00639 0247           89E5                       mov	bp,sp
00640                                           if gdc_setcursor.off=0
00641 0249           57                         push	di
00642 024A           56                         push	si
00643                                           endif
00644 024B           83C4                   FA  add	sp,*-6
00645 024E           8B46         04            mov	ax,4[bp]
00646 0251           B1                     04  mov	cl,*4
00647 0253           D3E8                       shr	ax,cl
00648 0255           50                         push	ax
00649 0256           8B46         06            mov	ax,6[bp]
00650 0259           8B0E       0000>           mov	cx,[_Ypitch_wds]
00651 025D           F7E9                       imul	cx
00652 025F           0346         F4            add	ax,-$C+gdc_setcursor.off[bp]
00653 0262           44                         inc	sp
00654 0263           44                         inc	sp
00655 0264           8946         FA            mov	-6+gdc_setcursor.off[bp],ax
00656 0267           31DB                       xor	bx,bx
00657 0269           BF                   0000> mov	di,#_start_address
00658 026C           E8         0000>           call	laddul
00659 026F           8946         F6            mov	-$A+gdc_setcursor.off[bp],ax
00660 0272           895E         F8            mov	-8+gdc_setcursor.off[bp],bx
00661                                           !BCC_EOS
00662 0275           B8                   0049  mov	ax,*$49
00663 0278           50                         push	ax
00664 0279           E8         FD9F            call	_gdc_putc
00665 027C           44                         inc	sp
00666 027D           44                         inc	sp
00667                                           !BCC_EOS
00668 027E           8A46         F6            mov	al,-$A+gdc_setcursor.off[bp]
00669 0281           30E4                       xor	ah,ah
00670 0283           50                         push	ax
00671 0284           E8         FDB6            call	_gdc_putp
00672 0287           44                         inc	sp
00673 0288           44                         inc	sp
00674                                           !BCC_EOS
00675 0289           8B46         F6            mov	ax,-$A+gdc_setcursor.off[bp]
00676 028C           8B5E         F8            mov	bx,-8+gdc_setcursor.off[bp]
00677 028F           88E0                       mov	al,ah
00678 0291           88DC                       mov	ah,bl
00679 0293           88FB                       mov	bl,bh
00680 0295           93                         xchg	bx,ax
00681 0296           98                         cbw
00682 0297           93                         xchg	bx,ax
00683 0298           30E4                       xor	ah,ah
00684 029A           50                         push	ax
00685 029B           E8         FD9F            call	_gdc_putp
00686 029E           44                         inc	sp
00687 029F           44                         inc	sp
00688                                           !BCC_EOS
00689 02A0           8B46         04            mov	ax,4[bp]
00690 02A3           B1                     04  mov	cl,*4
00691 02A5           D3E0                       shl	ax,cl
00692 02A7           31DB                       xor	bx,bx
00693 02A9           53                         push	bx
00694 02AA           50                         push	ax
00695 02AB           8B46         F8            mov	ax,-8+gdc_setcursor.off[bp]
00696 02AE           99                         cwd
00697 02AF           89D3                       mov	bx,dx
00698 02B1           52                         push	dx
00699 02B2           50                         push	ax
00700 02B3           B8                   0003  mov	ax,*3
00701 02B6           31DB                       xor	bx,bx
00702 02B8           53                         push	bx
00703 02B9           50                         push	ax
00704 02BA           8B46         EE            mov	ax,-$12+gdc_setcursor.off[bp]
00705 02BD           8B5E         F0            mov	bx,-$10+gdc_setcursor.off[bp]
00706 02C0           8D7E         EA            lea	di,-$16+gdc_setcursor.off[bp]
00707 02C3           E8         0000>           call	landl
00708 02C6           83C4                   08  add	sp,*8
00709 02C9           8D7E         F2            lea	di,-$E+gdc_setcursor.off[bp]
00710 02CC           E8         0000>           call	lorul
00711 02CF           83C4                   04  add	sp,*4
00712 02D2           30E4                       xor	ah,ah
00713 02D4           50                         push	ax
00714 02D5           E8         FD65            call	_gdc_putp
00715 02D8           44                         inc	sp
00716 02D9           44                         inc	sp
00717                                           !BCC_EOS
00718 02DA           8B46         04            mov	ax,4[bp]
00719 02DD           A3         0000>           mov	[_currX],ax
00720                                           !BCC_EOS
00721 02E0           8B46         06            mov	ax,6[bp]
00722 02E3           A3         0000>           mov	[_currY],ax
00723                                           !BCC_EOS
00724 02E6           83C4                   06  add	sp,*6
00725                                           if gdc_setcursor.off=0
00726 02E9           5E                         pop	si
00727 02EA           5F                         pop	di
00728                                           endif
00729 02EB           5D                         pop	bp
00730 02EC           C3                         ret
00731                                           ! Register BX DI used in function gdc_setcursor
00732                       00000000            gdc_setcursor.off = 0
00733                                           export	_gdc_start
00734                       000002ED>           _gdc_start:
00735 02ED           55                         push	bp
00736 02EE           89E5                       mov	bp,sp
00737                                           if gdc_start.off=0
00738                                           push	di
00739                                           push	si
00740                                           endif
00741 02F0           B8                   006B  mov	ax,*$6B
00742 02F3           50                         push	ax
00743 02F4           E8         FD24            call	_gdc_putc
00744 02F7           44                         inc	sp
00745 02F8           44                         inc	sp
00746                                           !BCC_EOS
00747                                           if gdc_start.off=0
00748                                           pop	si
00749                                           pop	di
00750                                           endif
00751 02F9           5D                         pop	bp
00752 02FA           C3                         ret
00753                       00000004            gdc_start.off = 4
00754                                           export	_gdc_mask
00755                       000002FB>           _gdc_mask:
00756                                           !BCC_EOS
00757 02FB           55                         push	bp
00758 02FC           89E5                       mov	bp,sp
00759                                           if gdc_mask.off=0
00760                                           push	di
00761                                           push	si
00762                                           endif
00763 02FE           B8                   004A  mov	ax,*$4A
00764 0301           50                         push	ax
00765 0302           E8         FD16            call	_gdc_putc
00766 0305           44                         inc	sp
00767 0306           44                         inc	sp
00768                                           !BCC_EOS
00769 0307           8A46         04            mov	al,4[bp]
00770 030A           30E4                       xor	ah,ah
00771 030C           50                         push	ax
00772 030D           E8         FD2D            call	_gdc_putp
00773 0310           44                         inc	sp
00774 0311           44                         inc	sp
00775                                           !BCC_EOS
00776 0312           8B46         04            mov	ax,4[bp]
00777 0315           88E0                       mov	al,ah
00778 0317           30E4                       xor	ah,ah
00779 0319           30E4                       xor	ah,ah
00780 031B           50                         push	ax
00781 031C           E8         FD1E            call	_gdc_putp
00782 031F           44                         inc	sp
00783 0320           44                         inc	sp
00784                                           !BCC_EOS
00785                                           if gdc_mask.off=0
00786                                           pop	si
00787                                           pop	di
00788                                           endif
00789 0321           5D                         pop	bp
00790 0322           C3                         ret
00791                       00000004            gdc_mask.off = 4
00792                                           export	_gdc_mode
00793                       00000323>           _gdc_mode:
00794                                           !BCC_EOS
00795 0323           55                         push	bp
00796 0324           89E5                       mov	bp,sp
00797                                           if gdc_mode.off=0
00798                                           push	di
00799                                           push	si
00800                                           endif
00801 0326           A0         0000>           mov	al,[_Mode]
00802 0329           30E4                       xor	ah,ah
00803 032B           3B46         04            cmp	ax,4[bp]
00804 032E           75           02            jne 	.13
00805                       00000330>           .14:
00806                                           if gdc_mode.off=0
00807                                           pop	si
00808                                           pop	di
00809                                           endif
00810 0330           5D                         pop	bp
00811 0331           C3                         ret
00812                                           !BCC_EOS
00813                       00000332>           .13:
00814 0332           8A46         04            mov	al,4[bp]
00815 0335           24                     03  and	al,*3
00816 0337           0C                     20  or	al,*$20
00817 0339           30E4                       xor	ah,ah
00818 033B           50                         push	ax
00819 033C           E8         FCDC            call	_gdc_putc
00820 033F           44                         inc	sp
00821 0340           44                         inc	sp
00822                                           !BCC_EOS
00823 0341           8A46         04            mov	al,4[bp]
00824 0344           A2         0000>           mov	[_Mode],al
00825                                           !BCC_EOS
00826                                           if gdc_mode.off=0
00827                                           pop	si
00828                                           pop	di
00829                                           endif
00830 0347           5D                         pop	bp
00831 0348           C3                         ret
00832                       00000004            gdc_mode.off = 4
00833                                           export	_gdc_init
00834                       00000349>           _gdc_init:
00835                                           !BCC_EOS
00836 0349           55                         push	bp
00837 034A           89E5                       mov	bp,sp
00838                                           if gdc_init.off=0
00839 034C           57                         push	di
00840 034D           56                         push	si
00841                                           endif
00842 034E           C606       0000>       01  mov	byte ptr [_Mode],*1
00843                                           !BCC_EOS
00844 0353           E8         FDD8            call	_gdc_reset
00845                                           !BCC_EOS
00846 0356           8A46         04            mov	al,4[bp]
00847 0359           30E4                       xor	ah,ah
00848 035B           50                         push	ax
00849 035C           E8         FDBA            call	_gdc_sync
00850 035F           44                         inc	sp
00851 0360           44                         inc	sp
00852                                           !BCC_EOS
00853 0361           B8                   0001  mov	ax,*1
00854 0364           50                         push	ax
00855 0365           E8         FDDB            call	_gdc_vsync
00856 0368           44                         inc	sp
00857 0369           44                         inc	sp
00858                                           !BCC_EOS
00859 036A           A1         0000>           mov	ax,[_Ypitch]
00860 036D           B1                     04  mov	cl,*4
00861 036F           D3E8                       shr	ax,cl
00862 0371           A3         0000>           mov	[_Ypitch_wds],ax
00863 0374           50                         push	ax
00864 0375           E8         FE03            call	_gdc_pitch
00865 0378           44                         inc	sp
00866 0379           44                         inc	sp
00867                                           !BCC_EOS
00868 037A           A1         0000>           mov	ax,[_start_address]
00869 037D           A3         0000>           mov	[_area],ax
00870                                           !BCC_EOS
00871 0380           A1         0002>           mov	ax,[_start_address+2]
00872 0383           99                         cwd
00873 0384           89D3                       mov	bx,dx
00874 0386           A2         0002>           mov	[_area+2],al
00875                                           !BCC_EOS
00876 0389           A0         0000>           mov	al,[_Ymax]
00877 038C           A2         0003>           mov	[_area+3],al
00878                                           !BCC_EOS
00879 038F           A1         0000>           mov	ax,[_Ymax]
00880 0392           B1                     04  mov	cl,*4
00881 0394           D3E8                       shr	ax,cl
00882 0396           A2         0004>           mov	[_area+4],al
00883                                           !BCC_EOS
00884 0399           30C0                       xor	al,al
00885 039B           A2         0005>           mov	[_area+5],al
00886                                           !BCC_EOS
00887 039E           30C0                       xor	al,al
00888 03A0           A2         0006>           mov	[_area+6],al
00889                                           !BCC_EOS
00890 03A3           B8                   0008  mov	ax,*8
00891 03A6           50                         push	ax
00892 03A7           BB                   0000> mov	bx,#_area
00893 03AA           53                         push	bx
00894 03AB           31C0                       xor	ax,ax
00895 03AD           50                         push	ax
00896 03AE           E8         FDE3            call	_gdc_pram
00897 03B1           83C4                   06  add	sp,*6
00898                                           !BCC_EOS
00899 03B4           B8                   0008  mov	ax,*8
00900 03B7           50                         push	ax
00901 03B8           BB                   0000> mov	bx,#_area
00902 03BB           53                         push	bx
00903 03BC           B8                   0008  mov	ax,*8
00904 03BF           50                         push	ax
00905 03C0           E8         FDD1            call	_gdc_pram
00906 03C3           83C4                   06  add	sp,*6
00907                                           !BCC_EOS
00908 03C6           B8                   FFFF  mov	ax,#$FFFF
00909 03C9           50                         push	ax
00910 03CA           E8         FDFE            call	_gdc_pattern
00911 03CD           44                         inc	sp
00912 03CE           44                         inc	sp
00913                                           !BCC_EOS
00914 03CF           C606       0000>       01  mov	byte ptr [_Zoom_Draw],*1
00915                                           !BCC_EOS
00916 03D4           B8                   0001  mov	ax,*1
00917 03D7           50                         push	ax
00918 03D8           E8         FE0B            call	_gdc_zoom_display
00919 03DB           44                         inc	sp
00920 03DC           44                         inc	sp
00921                                           !BCC_EOS
00922 03DD           C706       0000>     0001  mov	word ptr [_currX],*1
00923                                           !BCC_EOS
00924 03E3           31C0                       xor	ax,ax
00925 03E5           50                         push	ax
00926 03E6           31C0                       xor	ax,ax
00927 03E8           50                         push	ax
00928 03E9           E8         FE5A            call	_gdc_setcursor
00929 03EC           83C4                   04  add	sp,*4
00930                                           !BCC_EOS
00931 03EF           31C0                       xor	ax,ax
00932 03F1           50                         push	ax
00933 03F2           E8         FF2E            call	_gdc_mode
00934 03F5           44                         inc	sp
00935 03F6           44                         inc	sp
00936                                           !BCC_EOS
00937 03F7           E8         FEF3            call	_gdc_start
00938                                           !BCC_EOS
00939                                           if gdc_init.off=0
00940 03FA           5E                         pop	si
00941 03FB           5F                         pop	di
00942                                           endif
00943 03FC           5D                         pop	bp
00944 03FD           C3                         ret
00945                                           ! Register BX used in function gdc_init
00946                       00000000            gdc_init.off = 0
00947                                           export	_gdc_done
00948                       000003FE>           _gdc_done:
00949 03FE           55                         push	bp
00950 03FF           89E5                       mov	bp,sp
00951                                           if gdc_done.off=0
00952                                           push	di
00953                                           push	si
00954                                           endif
00955                       00000401>           .18:
00956                                           !BCC_EOS
00957                       00000401>           .17:
00958 0401           B8                   04B0  mov	ax,#$4B0
00959 0404           50                         push	ax
00960 0405           E8         FBF8            call	_inp
00961 0408           44                         inc	sp
00962 0409           44                         inc	sp
00963 040A           24                     04  and	al,*4
00964 040C           74           F3            je 	.18
00965                       0000040E>           .19:
00966                       0000040E>           .16:
00967                       0000040E>           .1C:
00968                                           !BCC_EOS
00969                       0000040E>           .1B:
00970 040E           B8                   04B0  mov	ax,#$4B0
00971 0411           50                         push	ax
00972 0412           E8         FBEB            call	_inp
00973 0415           44                         inc	sp
00974 0416           44                         inc	sp
00975 0417           24                     08  and	al,*8
00976 0419           75           F3            jne	.1C
00977                       0000041B>           .1D:
00978                       0000041B>           .1A:
00979                                           if gdc_done.off=0
00980                                           pop	si
00981                                           pop	di
00982                                           endif
00983 041B           5D                         pop	bp
00984 041C           C3                         ret
00985                       00000004            gdc_done.off = 4
00986                                           export	_gdc_Dparam
00987                       0000041D>           _gdc_Dparam:
00988                                           !BCC_EOS
00989                                           !BCC_EOS
00990 041D           55                         push	bp
00991 041E           89E5                       mov	bp,sp
00992                                           if gdc_Dparam.off=0
00993                                           push	di
00994                                           push	si
00995                                           endif
00996 0420           8A46         04            mov	al,4[bp]
00997 0423           30E4                       xor	ah,ah
00998 0425           50                         push	ax
00999 0426           E8         FC14            call	_gdc_putp
01000 0429           44                         inc	sp
01001 042A           44                         inc	sp
01002                                           !BCC_EOS
01003 042B           8B46         04            mov	ax,4[bp]
01004 042E           88E0                       mov	al,ah
01005 0430           98                         cbw
01006 0431           8946         04            mov	4[bp],ax
01007                                           !BCC_EOS
01008 0434           8A46         04            mov	al,4[bp]
01009 0437           24                     3F  and	al,*$3F
01010 0439           0A46         06            or	al,6[bp]
01011 043C           30E4                       xor	ah,ah
01012 043E           50                         push	ax
01013 043F           E8         FBFB            call	_gdc_putp
01014 0442           44                         inc	sp
01015 0443           44                         inc	sp
01016                                           !BCC_EOS
01017                                           if gdc_Dparam.off=0
01018                                           pop	si
01019                                           pop	di
01020                                           endif
01021 0444           5D                         pop	bp
01022 0445           C3                         ret
01023                       00000004            gdc_Dparam.off = 4
01024                                           export	_gdc_hline
01025                       00000446>           _gdc_hline:
01026                                           !BCC_EOS
01027                                           !BCC_EOS
01028                                           !BCC_EOS
01029                                           !BCC_EOS
01030                                           !BCC_EOS
01031                                           !BCC_EOS
01032 0446           55                         push	bp
01033 0447           89E5                       mov	bp,sp
01034                                           if gdc_hline.off=0
01035                                           push	di
01036                                           push	si
01037                                           endif
01038 0449           83C4                   FA  add	sp,*-6
01039 044C           8B46         04            mov	ax,4[bp]
01040 044F           3B46         06            cmp	ax,6[bp]
01041 0452           7E           12            jle 	.1E
01042                       00000454>           .1F:
01043 0454           8B46         04            mov	ax,4[bp]
01044 0457           8946         FE            mov	-6+gdc_hline.off[bp],ax
01045                                           !BCC_EOS
01046 045A           8B46         06            mov	ax,6[bp]
01047 045D           8946         04            mov	4[bp],ax
01048                                           !BCC_EOS
01049 0460           8B46         FE            mov	ax,-6+gdc_hline.off[bp]
01050 0463           8946         06            mov	6[bp],ax
01051                                           !BCC_EOS
01052                       00000466>           .1E:
01053 0466           B8                   FFFF  mov	ax,#$FFFF
01054 0469           8946         FA            mov	-$A+gdc_hline.off[bp],ax
01055 046C           8946         FC            mov	-8+gdc_hline.off[bp],ax
01056                                           !BCC_EOS
01057 046F           FF76         08            push	8[bp]
01058 0472           FF76         04            push	4[bp]
01059 0475           E8         FDCE            call	_gdc_setcursor
01060 0478           83C4                   04  add	sp,*4
01061                                           !BCC_EOS
01062 047B           8B46         04            mov	ax,4[bp]
01063 047E           24                     0F  and	al,*$F
01064 0480           30E4                       xor	ah,ah
01065 0482           8946         FE            mov	-6+gdc_hline.off[bp],ax
01066 0485           85C0                       test	ax,ax
01067 0487           74           6C            je  	.20
01068                       00000489>           .21:
01069 0489           8B46         FC            mov	ax,-8+gdc_hline.off[bp]
01070 048C           8B4E         FE            mov	cx,-6+gdc_hline.off[bp]
01071 048F           D3E0                       shl	ax,cl
01072 0491           8946         FC            mov	-8+gdc_hline.off[bp],ax
01073                                           !BCC_EOS
01074 0494           8B46         06            mov	ax,6[bp]
01075 0497           B1                     04  mov	cl,*4
01076 0499           D3F8                       sar	ax,cl
01077 049B           50                         push	ax
01078 049C           8B46         04            mov	ax,4[bp]
01079 049F           B1                     04  mov	cl,*4
01080 04A1           D3F8                       sar	ax,cl
01081 04A3           3B46         F8            cmp	ax,-$C+gdc_hline.off[bp]
01082 04A6           8D66         FA            lea	sp,-$A+gdc_hline.off[bp]
01083 04A9           7D           3E            jge 	.22
01084                       000004AB>           .23:
01085 04AB           FF76         FC            push	-8+gdc_hline.off[bp]
01086 04AE           E8         FE4A            call	_gdc_mask
01087 04B1           44                         inc	sp
01088 04B2           44                         inc	sp
01089                                           !BCC_EOS
01090 04B3           B8                   004C  mov	ax,*$4C
01091 04B6           50                         push	ax
01092 04B7           E8         FB61            call	_gdc_putc
01093 04BA           44                         inc	sp
01094 04BB           44                         inc	sp
01095                                           !BCC_EOS
01096 04BC           B8                   0002  mov	ax,*2
01097 04BF           50                         push	ax
01098 04C0           E8         FB7A            call	_gdc_putp
01099 04C3           44                         inc	sp
01100 04C4           44                         inc	sp
01101                                           !BCC_EOS
01102 04C5           8A46         0A            mov	al,$A[bp]
01103 04C8           0C                     20  or	al,*$20
01104 04CA           30E4                       xor	ah,ah
01105 04CC           50                         push	ax
01106 04CD           E8         FB4B            call	_gdc_putc
01107 04D0           44                         inc	sp
01108 04D1           44                         inc	sp
01109                                           !BCC_EOS
01110 04D2           B8                   00FF  mov	ax,#$FF
01111 04D5           50                         push	ax
01112 04D6           E8         FB64            call	_gdc_putp
01113 04D9           44                         inc	sp
01114 04DA           44                         inc	sp
01115                                           !BCC_EOS
01116 04DB           B8                   00FF  mov	ax,#$FF
01117 04DE           50                         push	ax
01118 04DF           E8         FB5B            call	_gdc_putp
01119 04E2           44                         inc	sp
01120 04E3           44                         inc	sp
01121                                           !BCC_EOS
01122 04E4           C746         FC      FFFF  mov	word ptr -8+gdc_hline.off[bp],#$FFFF
01123                                           !BCC_EOS
01124                       000004E9>           .22:
01125 04E9           B8                   0010  mov	ax,*$10
01126 04EC           2B46         FE            sub	ax,-6+gdc_hline.off[bp]
01127 04EF           0346         04            add	ax,4[bp]
01128 04F2           8946         04            mov	4[bp],ax
01129                                           !BCC_EOS
01130                       000004F5>           .20:
01131 04F5           8B46         06            mov	ax,6[bp]
01132 04F8           24                     0F  and	al,*$F
01133 04FA           50                         push	ax
01134 04FB           B8                   000F  mov	ax,*$F
01135 04FE           2A46         F8            sub	al,-$C+gdc_hline.off[bp]
01136 0501           80DC                   00  sbb	ah,*0
01137 0504           44                         inc	sp
01138 0505           44                         inc	sp
01139 0506           8946         FE            mov	-6+gdc_hline.off[bp],ax
01140 0509           85C0                       test	ax,ax
01141 050B           74           1D            je  	.24
01142                       0000050D>           .25:
01143 050D           8B46         FA            mov	ax,-$A+gdc_hline.off[bp]
01144 0510           8B4E         FE            mov	cx,-6+gdc_hline.off[bp]
01145 0513           D3E8                       shr	ax,cl
01146 0515           8946         FA            mov	-$A+gdc_hline.off[bp],ax
01147                                           !BCC_EOS
01148 0518           B8                   0010  mov	ax,*$10
01149 051B           2B46         FE            sub	ax,-6+gdc_hline.off[bp]
01150 051E           50                         push	ax
01151 051F           8B46         06            mov	ax,6[bp]
01152 0522           2B46         F8            sub	ax,-$C+gdc_hline.off[bp]
01153 0525           8946         06            mov	6[bp],ax
01154 0528           44                         inc	sp
01155 0529           44                         inc	sp
01156                                           !BCC_EOS
01157                       0000052A>           .24:
01158 052A           8B46         04            mov	ax,4[bp]
01159 052D           B1                     04  mov	cl,*4
01160 052F           D3F8                       sar	ax,cl
01161 0531           50                         push	ax
01162 0532           8B46         06            mov	ax,6[bp]
01163 0535           B1                     04  mov	cl,*4
01164 0537           D3F8                       sar	ax,cl
01165 0539           2B46         F8            sub	ax,-$C+gdc_hline.off[bp]
01166 053C           44                         inc	sp
01167 053D           44                         inc	sp
01168 053E           8946         FE            mov	-6+gdc_hline.off[bp],ax
01169 0541           85C0                       test	ax,ax
01170 0543           7E           4A            jle 	.26
01171                       00000545>           .27:
01172 0545           FF76         FC            push	-8+gdc_hline.off[bp]
01173 0548           E8         FDB0            call	_gdc_mask
01174 054B           44                         inc	sp
01175 054C           44                         inc	sp
01176                                           !BCC_EOS
01177 054D           B8                   004C  mov	ax,*$4C
01178 0550           50                         push	ax
01179 0551           E8         FAC7            call	_gdc_putc
01180 0554           44                         inc	sp
01181 0555           44                         inc	sp
01182                                           !BCC_EOS
01183 0556           B8                   0002  mov	ax,*2
01184 0559           50                         push	ax
01185 055A           E8         FAE0            call	_gdc_putp
01186 055D           44                         inc	sp
01187 055E           44                         inc	sp
01188                                           !BCC_EOS
01189 055F           31C0                       xor	ax,ax
01190 0561           50                         push	ax
01191 0562           FF76         FE            push	-6+gdc_hline.off[bp]
01192 0565           E8         FEB5            call	_gdc_Dparam
01193 0568           83C4                   04  add	sp,*4
01194                                           !BCC_EOS
01195 056B           8A46         0A            mov	al,$A[bp]
01196 056E           0C                     20  or	al,*$20
01197 0570           30E4                       xor	ah,ah
01198 0572           50                         push	ax
01199 0573           E8         FAA5            call	_gdc_putc
01200 0576           44                         inc	sp
01201 0577           44                         inc	sp
01202                                           !BCC_EOS
01203 0578           B8                   00FF  mov	ax,#$FF
01204 057B           50                         push	ax
01205 057C           E8         FABE            call	_gdc_putp
01206 057F           44                         inc	sp
01207 0580           44                         inc	sp
01208                                           !BCC_EOS
01209 0581           B8                   00FF  mov	ax,#$FF
01210 0584           50                         push	ax
01211 0585           E8         FAB5            call	_gdc_putp
01212 0588           44                         inc	sp
01213 0589           44                         inc	sp
01214                                           !BCC_EOS
01215 058A           C746         FC      FFFF  mov	word ptr -8+gdc_hline.off[bp],#$FFFF
01216                                           !BCC_EOS
01217                       0000058F>           .26:
01218 058F           8B46         FC            mov	ax,-8+gdc_hline.off[bp]
01219 0592           2346         FA            and	ax,-$A+gdc_hline.off[bp]
01220 0595           8946         FC            mov	-8+gdc_hline.off[bp],ax
01221 0598           3D                   FFFF  cmp	ax,#$FFFF
01222 059B           74           39            je  	.28
01223                       0000059D>           .29:
01224 059D           FF76         FC            push	-8+gdc_hline.off[bp]
01225 05A0           E8         FD58            call	_gdc_mask
01226 05A3           44                         inc	sp
01227 05A4           44                         inc	sp
01228                                           !BCC_EOS
01229 05A5           B8                   004C  mov	ax,*$4C
01230 05A8           50                         push	ax
01231 05A9           E8         FA6F            call	_gdc_putc
01232 05AC           44                         inc	sp
01233 05AD           44                         inc	sp
01234                                           !BCC_EOS
01235 05AE           B8                   0002  mov	ax,*2
01236 05B1           50                         push	ax
01237 05B2           E8         FA88            call	_gdc_putp
01238 05B5           44                         inc	sp
01239 05B6           44                         inc	sp
01240                                           !BCC_EOS
01241 05B7           8A46         0A            mov	al,$A[bp]
01242 05BA           0C                     20  or	al,*$20
01243 05BC           30E4                       xor	ah,ah
01244 05BE           50                         push	ax
01245 05BF           E8         FA59            call	_gdc_putc
01246 05C2           44                         inc	sp
01247 05C3           44                         inc	sp
01248                                           !BCC_EOS
01249 05C4           B8                   00FF  mov	ax,#$FF
01250 05C7           50                         push	ax
01251 05C8           E8         FA72            call	_gdc_putp
01252 05CB           44                         inc	sp
01253 05CC           44                         inc	sp
01254                                           !BCC_EOS
01255 05CD           B8                   00FF  mov	ax,#$FF
01256 05D0           50                         push	ax
01257 05D1           E8         FA69            call	_gdc_putp
01258 05D4           44                         inc	sp
01259 05D5           44                         inc	sp
01260                                           !BCC_EOS
01261                       000005D6>           .28:
01262 05D6           83C4                   06  add	sp,*6
01263                                           if gdc_hline.off=0
01264                                           pop	si
01265                                           pop	di
01266                                           endif
01267 05D9           5D                         pop	bp
01268 05DA           C3                         ret
01269                       00000004            gdc_hline.off = 4
01270                                           export	_gdc_line
01271                       000005DB>           _gdc_line:
01272                                           !BCC_EOS
01273                                           !BCC_EOS
01274                                           !BCC_EOS
01275                                           !BCC_EOS
01276                                           !BCC_EOS
01277 0000                                      .data
01278                       00000000>           .2A:
01279 0000                      0000            .word	0
01280 0002                      0001            .word	1
01281 0004                      0003            .word	3
01282 0006                      0002            .word	2
01283 0008                      0007            .word	7
01284 000A                      0006            .word	6
01285 000C                      0004            .word	4
01286 000E                      0005            .word	5
01287 05DB                                      .text
01288                                           !BCC_EOS
01289 05DB           55                         push	bp
01290 05DC           89E5                       mov	bp,sp
01291                                           if gdc_line.off=0
01292 05DE           57                         push	di
01293 05DF           56                         push	si
01294                                           endif
01295 05E0           83C4                   F3  add	sp,*-$D
01296 05E3           30C0                       xor	al,al
01297 05E5           8846         EF            mov	-$11+gdc_line.off[bp],al
01298                                           !BCC_EOS
01299 05E8           4C                         dec	sp
01300 05E9           FF76         06            push	6[bp]
01301 05EC           FF76         04            push	4[bp]
01302 05EF           E8         FC54            call	_gdc_setcursor
01303 05F2           83C4                   04  add	sp,*4
01304                                           !BCC_EOS
01305 05F5           8B46         08            mov	ax,8[bp]
01306 05F8           2B46         04            sub	ax,4[bp]
01307 05FB           8946         FA            mov	-6+gdc_line.off[bp],ax
01308 05FE           85C0                       test	ax,ax
01309 0600           7D           10            jge 	.2B
01310                       00000602>           .2C:
01311 0602           8A46         EF            mov	al,-$11+gdc_line.off[bp]
01312 0605           0C                     04  or	al,*4
01313 0607           8846         EF            mov	-$11+gdc_line.off[bp],al
01314                                           !BCC_EOS
01315 060A           31C0                       xor	ax,ax
01316 060C           2B46         FA            sub	ax,-6+gdc_line.off[bp]
01317 060F           8946         FA            mov	-6+gdc_line.off[bp],ax
01318                                           !BCC_EOS
01319                       00000612>           .2B:
01320 0612           8B46         0A            mov	ax,$A[bp]
01321 0615           2B46         06            sub	ax,6[bp]
01322 0618           8946         F8            mov	-8+gdc_line.off[bp],ax
01323 061B           85C0                       test	ax,ax
01324 061D           7D           10            jge 	.2D
01325                       0000061F>           .2E:
01326 061F           8A46         EF            mov	al,-$11+gdc_line.off[bp]
01327 0622           0C                     02  or	al,*2
01328 0624           8846         EF            mov	-$11+gdc_line.off[bp],al
01329                                           !BCC_EOS
01330 0627           31C0                       xor	ax,ax
01331 0629           2B46         F8            sub	ax,-8+gdc_line.off[bp]
01332 062C           8946         F8            mov	-8+gdc_line.off[bp],ax
01333                                           !BCC_EOS
01334                       0000062F>           .2D:
01335 062F           8B46         FA            mov	ax,-6+gdc_line.off[bp]
01336 0632           3B46         F8            cmp	ax,-8+gdc_line.off[bp]
01337 0635           7E           16            jle 	.2F
01338                       00000637>           .30:
01339 0637           8A46         EF            mov	al,-$11+gdc_line.off[bp]
01340 063A           0C                     01  or	al,*1
01341 063C           8846         EF            mov	-$11+gdc_line.off[bp],al
01342                                           !BCC_EOS
01343 063F           8B46         FA            mov	ax,-6+gdc_line.off[bp]
01344 0642           8946         F6            mov	-$A+gdc_line.off[bp],ax
01345                                           !BCC_EOS
01346 0645           8B46         F8            mov	ax,-8+gdc_line.off[bp]
01347 0648           8946         F4            mov	-$C+gdc_line.off[bp],ax
01348                                           !BCC_EOS
01349 064B           EB           0C            jmp .31
01350                       0000064D>           .2F:
01351 064D           8B46         F8            mov	ax,-8+gdc_line.off[bp]
01352 0650           8946         F6            mov	-$A+gdc_line.off[bp],ax
01353                                           !BCC_EOS
01354 0653           8B46         FA            mov	ax,-6+gdc_line.off[bp]
01355 0656           8946         F4            mov	-$C+gdc_line.off[bp],ax
01356                                           !BCC_EOS
01357                       00000659>           .31:
01358 0659           8B46         F4            mov	ax,-$C+gdc_line.off[bp]
01359 065C           0146         F4            add	-$C+gdc_line.off[bp],ax
01360                                           !BCC_EOS
01361 065F           8B46         FA            mov	ax,-6+gdc_line.off[bp]
01362 0662           3B46         F8            cmp	ax,-8+gdc_line.off[bp]
01363 0665           75           04            jne	.32
01364 0667           B0                     01  mov	al,*1
01365 0669           EB           02            jmp	.33
01366                       0000066B>           .32:
01367 066B           30C0                       xor	al,al
01368                       0000066D>           .33:
01369 066D           50                         push	ax
01370 066E           8A46         EF            mov	al,-$11+gdc_line.off[bp]
01371 0671           30E4                       xor	ah,ah
01372 0673           D1E0                       shl	ax,*1
01373 0675           89C3                       mov	bx,ax
01374 0677           8B87       0000>           mov	ax,.2A[bx]
01375 067B           0A46         EC            or	al,-$14+gdc_line.off[bp]
01376 067E           44                         inc	sp
01377 067F           44                         inc	sp
01378 0680           8846         EF            mov	-$11+gdc_line.off[bp],al
01379                                           !BCC_EOS
01380 0683           B8                   004C  mov	ax,*$4C
01381 0686           50                         push	ax
01382 0687           E8         F991            call	_gdc_putc
01383 068A           44                         inc	sp
01384 068B           44                         inc	sp
01385                                           !BCC_EOS
01386 068C           8A46         EF            mov	al,-$11+gdc_line.off[bp]
01387 068F           0C                     08  or	al,*8
01388 0691           30E4                       xor	ah,ah
01389 0693           50                         push	ax
01390 0694           E8         F9A6            call	_gdc_putp
01391 0697           44                         inc	sp
01392 0698           44                         inc	sp
01393                                           !BCC_EOS
01394 0699           8B46         F4            mov	ax,-$C+gdc_line.off[bp]
01395 069C           2B46         F6            sub	ax,-$A+gdc_line.off[bp]
01396 069F           8946         F0            mov	-$10+gdc_line.off[bp],ax
01397 06A2           2B46         F6            sub	ax,-$A+gdc_line.off[bp]
01398 06A5           8946         F2            mov	-$E+gdc_line.off[bp],ax
01399                                           !BCC_EOS
01400 06A8           803E       0000>       03  cmp	byte ptr [_dbglvl],*3
01401 06AD           72           1C            jb  	.34
01402                       000006AF>           .35:
01403 06AF           FF76         F4            push	-$C+gdc_line.off[bp]
01404 06B2           FF76         F2            push	-$E+gdc_line.off[bp]
01405 06B5           FF76         F0            push	-$10+gdc_line.off[bp]
01406 06B8           FF76         F6            push	-$A+gdc_line.off[bp]
01407 06BB           8A46         EF            mov	al,-$11+gdc_line.off[bp]
01408 06BE           30E4                       xor	ah,ah
01409 06C0           50                         push	ax
01410 06C1           BB                   008E> mov	bx,#.36
01411 06C4           53                         push	bx
01412 06C5           E8         0000>           call	_printf
01413 06C8           83C4                   0C  add	sp,*$C
01414                                           !BCC_EOS
01415                       000006CB>           .34:
01416                                           !BCC_EOS
01417 06CB           31C0                       xor	ax,ax
01418 06CD           50                         push	ax
01419 06CE           FF76         F6            push	-$A+gdc_line.off[bp]
01420 06D1           E8         FD49            call	_gdc_Dparam
01421 06D4           83C4                   04  add	sp,*4
01422                                           !BCC_EOS
01423 06D7           31C0                       xor	ax,ax
01424 06D9           50                         push	ax
01425 06DA           FF76         F0            push	-$10+gdc_line.off[bp]
01426 06DD           E8         FD3D            call	_gdc_Dparam
01427 06E0           83C4                   04  add	sp,*4
01428                                           !BCC_EOS
01429 06E3           31C0                       xor	ax,ax
01430 06E5           50                         push	ax
01431 06E6           FF76         F2            push	-$E+gdc_line.off[bp]
01432 06E9           E8         FD31            call	_gdc_Dparam
01433 06EC           83C4                   04  add	sp,*4
01434                                           !BCC_EOS
01435 06EF           31C0                       xor	ax,ax
01436 06F1           50                         push	ax
01437 06F2           FF76         F4            push	-$C+gdc_line.off[bp]
01438 06F5           E8         FD25            call	_gdc_Dparam
01439 06F8           83C4                   04  add	sp,*4
01440                                           !BCC_EOS
01441 06FB           B8                   006C  mov	ax,*$6C
01442 06FE           50                         push	ax
01443 06FF           E8         F919            call	_gdc_putc
01444 0702           44                         inc	sp
01445 0703           44                         inc	sp
01446                                           !BCC_EOS
01447 0704           8B46         08            mov	ax,8[bp]
01448 0707           A3         0000>           mov	[_currX],ax
01449                                           !BCC_EOS
01450 070A           8B46         0A            mov	ax,$A[bp]
01451 070D           A3         0000>           mov	[_currY],ax
01452                                           !BCC_EOS
01453 0710           83C4                   0E  add	sp,*$E
01454                                           if gdc_line.off=0
01455 0713           5E                         pop	si
01456 0714           5F                         pop	di
01457                                           endif
01458 0715           5D                         pop	bp
01459 0716           C3                         ret
01460                                           ! Register BX used in function gdc_line
01461                       00000000            gdc_line.off = 0
01462 0010                                      .data
01463                       00000010>           _Fill:
01464 0010                        FF            .byte	$FF
01465 0011                        FF            .byte	$FF
01466 0012                        FF            .byte	$FF
01467 0013                        FF            .byte	$FF
01468 0014                        FF            .byte	$FF
01469 0015                        FF            .byte	$FF
01470 0016                        FF            .byte	$FF
01471 0017                        FF            .byte	$FF
01472                                           !BCC_EOS
01473 0717                                      .text
01474                                           export	_gdc_fill
01475                       00000717>           _gdc_fill:
01476                                           !BCC_EOS
01477                                           !BCC_EOS
01478                                           !BCC_EOS
01479                                           !BCC_EOS
01480                                           !BCC_EOS
01481 0717           55                         push	bp
01482 0718           89E5                       mov	bp,sp
01483                                           if gdc_fill.off=0
01484 071A           57                         push	di
01485 071B           56                         push	si
01486                                           endif
01487 071C           4C                         dec	sp
01488 071D           A0         0000>           mov	al,[_Mode]
01489 0720           8846         FB            mov	-5+gdc_fill.off[bp],al
01490                                           !BCC_EOS
01491                                           !BCC_EOS
01492                                           !BCC_EOS
01493 0723           83C4                   F9  add	sp,*-7
01494 0726           B8                   0008  mov	ax,*8
01495 0729           50                         push	ax
01496 072A           BB                   0010> mov	bx,#_Fill
01497 072D           53                         push	bx
01498 072E           B8                   0008  mov	ax,*8
01499 0731           50                         push	ax
01500 0732           E8         FA5F            call	_gdc_pram
01501 0735           83C4                   06  add	sp,*6
01502                                           !BCC_EOS
01503 0738           8A46         0C            mov	al,$C[bp]
01504 073B           84C0                       test	al,al
01505 073D           75           0B            jne 	.37
01506                       0000073F>           .38:
01507 073F           B8                   0002  mov	ax,*2
01508 0742           50                         push	ax
01509 0743           E8         FBDD            call	_gdc_mode
01510 0746           44                         inc	sp
01511 0747           44                         inc	sp
01512                                           !BCC_EOS
01513 0748           EB           09            jmp .39
01514                       0000074A>           .37:
01515 074A           B8                   0003  mov	ax,*3
01516 074D           50                         push	ax
01517 074E           E8         FBD2            call	_gdc_mode
01518 0751           44                         inc	sp
01519 0752           44                         inc	sp
01520                                           !BCC_EOS
01521                       00000753>           .39:
01522 0753           8B46         04            mov	ax,4[bp]
01523 0756           3B46         08            cmp	ax,8[bp]
01524 0759           7E           12            jle 	.3A
01525                       0000075B>           .3B:
01526 075B           8B46         04            mov	ax,4[bp]
01527 075E           8946         F8            mov	-8+gdc_fill.off[bp],ax
01528                                           !BCC_EOS
01529 0761           8B46         08            mov	ax,8[bp]
01530 0764           8946         04            mov	4[bp],ax
01531                                           !BCC_EOS
01532 0767           8B46         F8            mov	ax,-8+gdc_fill.off[bp]
01533 076A           8946         08            mov	8[bp],ax
01534                                           !BCC_EOS
01535                       0000076D>           .3A:
01536 076D           8B46         06            mov	ax,6[bp]
01537 0770           3B46         0A            cmp	ax,$A[bp]
01538 0773           7E           12            jle 	.3C
01539                       00000775>           .3D:
01540 0775           8B46         06            mov	ax,6[bp]
01541 0778           8946         F8            mov	-8+gdc_fill.off[bp],ax
01542                                           !BCC_EOS
01543 077B           8B46         0A            mov	ax,$A[bp]
01544 077E           8946         06            mov	6[bp],ax
01545                                           !BCC_EOS
01546 0781           8B46         F8            mov	ax,-8+gdc_fill.off[bp]
01547 0784           8946         0A            mov	$A[bp],ax
01548                                           !BCC_EOS
01549                       00000787>           .3C:
01550 0787           FF76         06            push	6[bp]
01551 078A           FF76         04            push	4[bp]
01552 078D           E8         FAB6            call	_gdc_setcursor
01553 0790           83C4                   04  add	sp,*4
01554                                           !BCC_EOS
01555 0793           B8                   004C  mov	ax,*$4C
01556 0796           50                         push	ax
01557 0797           E8         F881            call	_gdc_putc
01558 079A           44                         inc	sp
01559 079B           44                         inc	sp
01560                                           !BCC_EOS
01561 079C           B8                   0010  mov	ax,*$10
01562 079F           50                         push	ax
01563 07A0           E8         F89A            call	_gdc_putp
01564 07A3           44                         inc	sp
01565 07A4           44                         inc	sp
01566                                           !BCC_EOS
01567 07A5           8B46         08            mov	ax,8[bp]
01568 07A8           2B46         04            sub	ax,4[bp]
01569 07AB           8946         F6            mov	-$A+gdc_fill.off[bp],ax
01570                                           !BCC_EOS
01571 07AE           8B46         0A            mov	ax,$A[bp]
01572 07B1           2B46         06            sub	ax,6[bp]
01573 07B4           40                         inc	ax
01574 07B5           8946         F4            mov	-$C+gdc_fill.off[bp],ax
01575                                           !BCC_EOS
01576 07B8           31C0                       xor	ax,ax
01577 07BA           50                         push	ax
01578 07BB           FF76         F6            push	-$A+gdc_fill.off[bp]
01579 07BE           E8         FC5C            call	_gdc_Dparam
01580 07C1           83C4                   04  add	sp,*4
01581                                           !BCC_EOS
01582 07C4           31C0                       xor	ax,ax
01583 07C6           50                         push	ax
01584 07C7           FF76         F4            push	-$C+gdc_fill.off[bp]
01585 07CA           E8         FC50            call	_gdc_Dparam
01586 07CD           83C4                   04  add	sp,*4
01587                                           !BCC_EOS
01588 07D0           31C0                       xor	ax,ax
01589 07D2           50                         push	ax
01590 07D3           FF76         F4            push	-$C+gdc_fill.off[bp]
01591 07D6           E8         FC44            call	_gdc_Dparam
01592 07D9           83C4                   04  add	sp,*4
01593                                           !BCC_EOS
01594 07DC           B8                   0068  mov	ax,*$68
01595 07DF           50                         push	ax
01596 07E0           E8         F838            call	_gdc_putc
01597 07E3           44                         inc	sp
01598 07E4           44                         inc	sp
01599                                           !BCC_EOS
01600 07E5           8A46         FB            mov	al,-5+gdc_fill.off[bp]
01601 07E8           30E4                       xor	ah,ah
01602 07EA           50                         push	ax
01603 07EB           E8         FB35            call	_gdc_mode
01604 07EE           44                         inc	sp
01605 07EF           44                         inc	sp
01606                                           !BCC_EOS
01607 07F0           83C4                   08  add	sp,*8
01608                                           if gdc_fill.off=0
01609 07F3           5E                         pop	si
01610 07F4           5F                         pop	di
01611                                           endif
01612 07F5           5D                         pop	bp
01613 07F6           C3                         ret
01614                                           ! Register BX used in function gdc_fill
01615                       00000000            gdc_fill.off = 0
01616                                           export	_gdc_fill2
01617                       000007F7>           _gdc_fill2:
01618                                           !BCC_EOS
01619                                           !BCC_EOS
01620                                           !BCC_EOS
01621                                           !BCC_EOS
01622                                           !BCC_EOS
01623 07F7           55                         push	bp
01624 07F8           89E5                       mov	bp,sp
01625                                           if gdc_fill2.off=0
01626 07FA           57                         push	di
01627 07FB           56                         push	si
01628                                           endif
01629 07FC           4C                         dec	sp
01630 07FD           A0         0000>           mov	al,[_Mode]
01631 0800           8846         FB            mov	-5+gdc_fill2.off[bp],al
01632                                           !BCC_EOS
01633                                           !BCC_EOS
01634 0803           83C4                   FD  add	sp,*-3
01635 0806           B8                   0008  mov	ax,*8
01636 0809           50                         push	ax
01637 080A           BB                   0010> mov	bx,#_Fill
01638 080D           53                         push	bx
01639 080E           B8                   0008  mov	ax,*8
01640 0811           50                         push	ax
01641 0812           E8         F97F            call	_gdc_pram
01642 0815           83C4                   06  add	sp,*6
01643                                           !BCC_EOS
01644 0818           8A46         0C            mov	al,$C[bp]
01645 081B           84C0                       test	al,al
01646 081D           75           0B            jne 	.3E
01647                       0000081F>           .3F:
01648 081F           B8                   0002  mov	ax,*2
01649 0822           50                         push	ax
01650 0823           E8         FAFD            call	_gdc_mode
01651 0826           44                         inc	sp
01652 0827           44                         inc	sp
01653                                           !BCC_EOS
01654 0828           EB           09            jmp .40
01655                       0000082A>           .3E:
01656 082A           B8                   0003  mov	ax,*3
01657 082D           50                         push	ax
01658 082E           E8         FAF2            call	_gdc_mode
01659 0831           44                         inc	sp
01660 0832           44                         inc	sp
01661                                           !BCC_EOS
01662                       00000833>           .40:
01663 0833           8B46         04            mov	ax,4[bp]
01664 0836           3B46         08            cmp	ax,8[bp]
01665 0839           7E           12            jle 	.41
01666                       0000083B>           .42:
01667 083B           8B46         04            mov	ax,4[bp]
01668 083E           8946         F8            mov	-8+gdc_fill2.off[bp],ax
01669                                           !BCC_EOS
01670 0841           8B46         08            mov	ax,8[bp]
01671 0844           8946         04            mov	4[bp],ax
01672                                           !BCC_EOS
01673 0847           8B46         F8            mov	ax,-8+gdc_fill2.off[bp]
01674 084A           8946         08            mov	8[bp],ax
01675                                           !BCC_EOS
01676                       0000084D>           .41:
01677 084D           8B46         06            mov	ax,6[bp]
01678 0850           3B46         0A            cmp	ax,$A[bp]
01679 0853           7E           12            jle 	.43
01680                       00000855>           .44:
01681 0855           8B46         06            mov	ax,6[bp]
01682 0858           8946         F8            mov	-8+gdc_fill2.off[bp],ax
01683                                           !BCC_EOS
01684 085B           8B46         0A            mov	ax,$A[bp]
01685 085E           8946         06            mov	6[bp],ax
01686                                           !BCC_EOS
01687 0861           8B46         F8            mov	ax,-8+gdc_fill2.off[bp]
01688 0864           8946         0A            mov	$A[bp],ax
01689                                           !BCC_EOS
01690                       00000867>           .43:
01691                                           !BCC_EOS
01692                                           !BCC_EOS
01693 0867           EB           15            jmp .47
01694                       00000869>           .48:
01695 0869           FF76         06            push	6[bp]
01696 086C           FF76         08            push	8[bp]
01697 086F           FF76         06            push	6[bp]
01698 0872           FF76         04            push	4[bp]
01699 0875           E8         FD63            call	_gdc_line
01700 0878           83C4                   08  add	sp,*8
01701                                           !BCC_EOS
01702                       0000087B>           .46:
01703 087B           FF46         06            inc	word ptr 6[bp]
01704                       0000087E>           .47:
01705 087E           8B46         06            mov	ax,6[bp]
01706 0881           3B46         0A            cmp	ax,$A[bp]
01707 0884           7E           E3            jle	.48
01708                       00000886>           .49:
01709                       00000886>           .45:
01710 0886           8A46         FB            mov	al,-5+gdc_fill2.off[bp]
01711 0889           30E4                       xor	ah,ah
01712 088B           50                         push	ax
01713 088C           E8         FA94            call	_gdc_mode
01714 088F           44                         inc	sp
01715 0890           44                         inc	sp
01716                                           !BCC_EOS
01717 0891           83C4                   04  add	sp,*4
01718                                           if gdc_fill2.off=0
01719 0894           5E                         pop	si
01720 0895           5F                         pop	di
01721                                           endif
01722 0896           5D                         pop	bp
01723 0897           C3                         ret
01724                                           ! Register BX used in function gdc_fill2
01725                       00000000            gdc_fill2.off = 0
01726                                           export	_gchar_test
01727                       00000898>           _gchar_test:
01728 0018                                      .data
01729                       00000018>           .4A:
01730 0018                        FF            .byte	$FF
01731 0019                        9F            .byte	$9F
01732 001A                        87            .byte	$87
01733 001B                        8B            .byte	$8B
01734 001C                        93            .byte	$93
01735 001D                        A3            .byte	$A3
01736 001E                        83            .byte	$83
01737 001F                        FF            .byte	$FF
01738 0898                                      .text
01739                                           !BCC_EOS
01740                                           !BCC_EOS
01741 0898           55                         push	bp
01742 0899           89E5                       mov	bp,sp
01743                                           if gchar_test.off=0
01744 089B           57                         push	di
01745 089C           56                         push	si
01746                                           endif
01747 089D           83C4                   F8  add	sp,*-8
01748 08A0           C746         F8      0064  mov	word ptr -8+gchar_test.off[bp],*$64
01749                                           !BCC_EOS
01750 08A5           C746         FA      00C8  mov	word ptr -6+gchar_test.off[bp],#$C8
01751                                           !BCC_EOS
01752 08AA           C746         F6      0028  mov	word ptr -$A+gchar_test.off[bp],*$28
01753                                           !BCC_EOS
01754 08AF           B8                   0002  mov	ax,*2
01755 08B2           50                         push	ax
01756 08B3           E8         F960            call	_gdc_zoom_draw
01757 08B6           44                         inc	sp
01758 08B7           44                         inc	sp
01759                                           !BCC_EOS
01760 08B8           31C0                       xor	ax,ax
01761 08BA           8946         F4            mov	-$C+gchar_test.off[bp],ax
01762                                           !BCC_EOS
01763                                           !BCC_EOS
01764 08BD           EB           77            jmp .4D
01765                       000008BF>           .4E:
01766 08BF           B8                   0008  mov	ax,*8
01767 08C2           50                         push	ax
01768 08C3           BB                   0018> mov	bx,#.4A
01769 08C6           53                         push	bx
01770 08C7           B8                   0008  mov	ax,*8
01771 08CA           50                         push	ax
01772 08CB           E8         F8C6            call	_gdc_pram
01773 08CE           83C4                   06  add	sp,*6
01774                                           !BCC_EOS
01775 08D1           FF76         F8            push	-8+gchar_test.off[bp]
01776 08D4           8B46         F4            mov	ax,-$C+gchar_test.off[bp]
01777 08D7           8B4E         F6            mov	cx,-$A+gchar_test.off[bp]
01778 08DA           F7E9                       imul	cx
01779 08DC           0346         FA            add	ax,-6+gchar_test.off[bp]
01780 08DF           50                         push	ax
01781 08E0           E8         F963            call	_gdc_setcursor
01782 08E3           83C4                   04  add	sp,*4
01783                                           !BCC_EOS
01784 08E6           31C0                       xor	ax,ax
01785 08E8           50                         push	ax
01786 08E9           E8         FA37            call	_gdc_mode
01787 08EC           44                         inc	sp
01788 08ED           44                         inc	sp
01789                                           !BCC_EOS
01790 08EE           B8                   004C  mov	ax,*$4C
01791 08F1           50                         push	ax
01792 08F2           E8         F726            call	_gdc_putc
01793 08F5           44                         inc	sp
01794 08F6           44                         inc	sp
01795                                           !BCC_EOS
01796 08F7           8B46         F4            mov	ax,-$C+gchar_test.off[bp]
01797 08FA           05                   0010  add	ax,*$10
01798 08FD           50                         push	ax
01799 08FE           E8         F73C            call	_gdc_putp
01800 0901           44                         inc	sp
01801 0902           44                         inc	sp
01802                                           !BCC_EOS
01803 0903           31C0                       xor	ax,ax
01804 0905           50                         push	ax
01805 0906           B8                   0007  mov	ax,*7
01806 0909           50                         push	ax
01807 090A           E8         FB10            call	_gdc_Dparam
01808 090D           83C4                   04  add	sp,*4
01809                                           !BCC_EOS
01810 0910           31C0                       xor	ax,ax
01811 0912           50                         push	ax
01812 0913           B8                   0008  mov	ax,*8
01813 0916           50                         push	ax
01814 0917           E8         FB03            call	_gdc_Dparam
01815 091A           83C4                   04  add	sp,*4
01816                                           !BCC_EOS
01817 091D           31C0                       xor	ax,ax
01818 091F           50                         push	ax
01819 0920           B8                   0008  mov	ax,*8
01820 0923           50                         push	ax
01821 0924           E8         FAF6            call	_gdc_Dparam
01822 0927           83C4                   04  add	sp,*4
01823                                           !BCC_EOS
01824 092A           B8                   0068  mov	ax,*$68
01825 092D           50                         push	ax
01826 092E           E8         F6EA            call	_gdc_putc
01827 0931           44                         inc	sp
01828 0932           44                         inc	sp
01829                                           !BCC_EOS
01830                       00000933>           .4C:
01831 0933           FF46         F4            inc	word ptr -$C+gchar_test.off[bp]
01832                       00000936>           .4D:
01833 0936           837E         F4        08  cmp	word ptr -$C+gchar_test.off[bp],*8
01834 093A   7303    E9         FF80            blo 	.4E
01835                       0000093F>           .4F:
01836                       0000093F>           .4B:
01837 093F           B8                   0001  mov	ax,*1
01838 0942           50                         push	ax
01839 0943           E8         F8D0            call	_gdc_zoom_draw
01840 0946           44                         inc	sp
01841 0947           44                         inc	sp
01842                                           !BCC_EOS
01843 0948           B8                   9999  mov	ax,#$9999
01844 094B           50                         push	ax
01845 094C           E8         F87C            call	_gdc_pattern
01846 094F           44                         inc	sp
01847 0950           44                         inc	sp
01848                                           !BCC_EOS
01849 0951           B8                   0003  mov	ax,*3
01850 0954           50                         push	ax
01851 0955           E8         F9CB            call	_gdc_mode
01852 0958           44                         inc	sp
01853 0959           44                         inc	sp
01854                                           !BCC_EOS
01855 095A           FF76         F8            push	-8+gchar_test.off[bp]
01856 095D           8B46         F6            mov	ax,-$A+gchar_test.off[bp]
01857 0960           89C2                       mov	dx,ax
01858 0962           B1                     03  mov	cl,*3
01859 0964           D3E0                       shl	ax,cl
01860 0966           29D0                       sub	ax,dx
01861 0968           0346         FA            add	ax,-6+gchar_test.off[bp]
01862 096B           05                   0014  add	ax,*$14
01863 096E           50                         push	ax
01864 096F           FF76         F8            push	-8+gchar_test.off[bp]
01865 0972           8B46         FA            mov	ax,-6+gchar_test.off[bp]
01866 0975           05                   FFEC  add	ax,*-$14
01867 0978           50                         push	ax
01868 0979           E8         FC5F            call	_gdc_line
01869 097C           83C4                   10  add	sp,*8+8
01870                                           if gchar_test.off=0
01871 097F           5E                         pop	si
01872 0980           5F                         pop	di
01873                                           endif
01874 0981           5D                         pop	bp
01875 0982           C3                         ret
01876                                           ! Register BX used in function gchar_test
01877                       00000000            gchar_test.off = 0
01878                                           export	_main
01879                       00000983>           _main:
01880                                           !BCC_EOS
01881                                           !BCC_EOS
01882                                           .globl	___mkargv
01883                                           !BCC_EOS
01884 0983           55                         push	bp
01885 0984           89E5                       mov	bp,sp
01886                                           if main.off=0
01887 0986           57                         push	di
01888 0987           56                         push	si
01889                                           endif
01890 0988           83C4                   FA  add	sp,*-6
01891 098B           31C0                       xor	ax,ax
01892 098D           31DB                       xor	bx,bx
01893 098F           A3         0000>           mov	[_start_address],ax
01894 0992           891E       0002>           mov	[_start_address+2],bx
01895                                           !BCC_EOS
01896 0996           30C0                       xor	al,al
01897 0998           A2         0000>           mov	[_dbglvl],al
01898                                           !BCC_EOS
01899 099B           C706       0000>     0280  mov	word ptr [_Xmax],#$280
01900                                           !BCC_EOS
01901 09A1           C706       0000>     0340  mov	word ptr [_Ypitch],#$340
01902                                           !BCC_EOS
01903 09A7           C606       0000>       02  mov	byte ptr [_HFP],*2
01904                                           !BCC_EOS
01905 09AC           C606       0000>       06  mov	byte ptr [_HS],*6
01906                                           !BCC_EOS
01907 09B1           C606       0000>       08  mov	byte ptr [_HBP],*8
01908                                           !BCC_EOS
01909 09B6           BB                   0076> mov	bx,#.50
01910 09B9           53                         push	bx
01911 09BA           E8         0000>           call	_printf
01912 09BD           44                         inc	sp
01913 09BE           44                         inc	sp
01914                                           !BCC_EOS
01915 09BF           837E         04        02  cmp	word ptr 4[bp],*2
01916 09C3           74           06            je  	.52
01917                       000009C5>           .53:
01918 09C5           837E         04        05  cmp	word ptr 4[bp],*5
01919 09C9           75           17            jne 	.51
01920                       000009CB>           .52:
01921 09CB           FF4E         04            dec	word ptr 4[bp]
01922 09CE           8B46         04            mov	ax,4[bp]
01923 09D1           D1E0                       shl	ax,*1
01924 09D3           0346         06            add	ax,6[bp]
01925 09D6           89C3                       mov	bx,ax
01926 09D8           FF37                       push	[bx]
01927 09DA           E8         0000>           call	_atoi
01928 09DD           44                         inc	sp
01929 09DE           44                         inc	sp
01930 09DF           A3         0000>           mov	[_Xmax],ax
01931                                           !BCC_EOS
01932                       000009E2>           .51:
01933 09E2           837E         04        04  cmp	word ptr 4[bp],*4
01934 09E6           75           2A            jne 	.54
01935                       000009E8>           .55:
01936 09E8           8B5E         06            mov	bx,6[bp]
01937 09EB           FF77         02            push	2[bx]
01938 09EE           E8         0000>           call	_atoi
01939 09F1           44                         inc	sp
01940 09F2           44                         inc	sp
01941 09F3           A2         0000>           mov	[_HFP],al
01942                                           !BCC_EOS
01943 09F6           8B5E         06            mov	bx,6[bp]
01944 09F9           FF77         04            push	4[bx]
01945 09FC           E8         0000>           call	_atoi
01946 09FF           44                         inc	sp
01947 0A00           44                         inc	sp
01948 0A01           A2         0000>           mov	[_HS],al
01949                                           !BCC_EOS
01950 0A04           8B5E         06            mov	bx,6[bp]
01951 0A07           FF77         06            push	6[bx]
01952 0A0A           E8         0000>           call	_atoi
01953 0A0D           44                         inc	sp
01954 0A0E           44                         inc	sp
01955 0A0F           A2         0000>           mov	[_HBP],al
01956                                           !BCC_EOS
01957                       00000A12>           .54:
01958 0A12           A0         0000>           mov	al,[_HBP]
01959 0A15           30E4                       xor	ah,ah
01960 0A17           50                         push	ax
01961 0A18           A0         0000>           mov	al,[_HS]
01962 0A1B           30E4                       xor	ah,ah
01963 0A1D           50                         push	ax
01964 0A1E           A0         0000>           mov	al,[_HFP]
01965 0A21           30E4                       xor	ah,ah
01966 0A23           50                         push	ax
01967 0A24           BB                   005F> mov	bx,#.56
01968 0A27           53                         push	bx
01969 0A28           E8         0000>           call	_printf
01970 0A2B           83C4                   08  add	sp,*8
01971                                           !BCC_EOS
01972 0A2E           813E       0000>     0280  cmp	word ptr [_Xmax],#$280
01973 0A34           75           08            jne 	.57
01974                       00000A36>           .58:
01975 0A36           C706       0000>     01E0  mov	word ptr [_Ymax],#$1E0
01976                                           !BCC_EOS
01977 0A3C           EB           37            jmp .59
01978                       00000A3E>           .57:
01979 0A3E           813E       0000>     0320  cmp	word ptr [_Xmax],#$320
01980 0A44           75           08            jne 	.5A
01981                       00000A46>           .5B:
01982 0A46           C706       0000>     0258  mov	word ptr [_Ymax],#$258
01983                                           !BCC_EOS
01984 0A4C           EB           27            jmp .5C
01985                       00000A4E>           .5A:
01986 0A4E           813E       0000>     0340  cmp	word ptr [_Xmax],#$340
01987 0A54           75           08            jne 	.5D
01988                       00000A56>           .5E:
01989 0A56           C706       0000>     0270  mov	word ptr [_Ymax],#$270
01990                                           !BCC_EOS
01991 0A5C           EB           17            jmp .5F
01992                       00000A5E>           .5D:
01993 0A5E           FF36       0000>           push	[_Xmax]
01994 0A62           BB                   004C> mov	bx,#.60
01995 0A65           53                         push	bx
01996 0A66           E8         0000>           call	_printf
01997 0A69           83C4                   04  add	sp,*4
01998                                           !BCC_EOS
01999 0A6C           B8                   0005  mov	ax,*5
02000 0A6F           50                         push	ax
02001 0A70           E8         0000>           call	_exit
02002 0A73           44                         inc	sp
02003 0A74           44                         inc	sp
02004                                           !BCC_EOS
02005                       00000A75>           .5F:
02006                       00000A75>           .5C:
02007                       00000A75>           .59:
02008 0A75           FF36       0000>           push	[_Ymax]
02009 0A79           FF36       0000>           push	[_Xmax]
02010 0A7D           BB                   0036> mov	bx,#.61
02011 0A80           53                         push	bx
02012 0A81           E8         0000>           call	_printf
02013 0A84           83C4                   06  add	sp,*6
02014                                           !BCC_EOS
02015 0A87           31C0                       xor	ax,ax
02016 0A89           50                         push	ax
02017 0A8A           E8         F8BC            call	_gdc_init
02018 0A8D           44                         inc	sp
02019 0A8E           44                         inc	sp
02020                                           !BCC_EOS
02021 0A8F           31C0                       xor	ax,ax
02022 0A91           50                         push	ax
02023 0A92           A1         0000>           mov	ax,[_Ymax]
02024 0A95           48                         dec	ax
02025 0A96           50                         push	ax
02026 0A97           A1         0000>           mov	ax,[_Xmax]
02027 0A9A           48                         dec	ax
02028 0A9B           50                         push	ax
02029 0A9C           31C0                       xor	ax,ax
02030 0A9E           50                         push	ax
02031 0A9F           31C0                       xor	ax,ax
02032 0AA1           50                         push	ax
02033 0AA2           E8         FC72            call	_gdc_fill
02034 0AA5           83C4                   0A  add	sp,*$A
02035                                           !BCC_EOS
02036 0AA8           31C0                       xor	ax,ax
02037 0AAA           50                         push	ax
02038 0AAB           A1         0000>           mov	ax,[_Ymax]
02039 0AAE           48                         dec	ax
02040 0AAF           50                         push	ax
02041 0AB0           A1         0000>           mov	ax,[_Xmax]
02042 0AB3           48                         dec	ax
02043 0AB4           50                         push	ax
02044 0AB5           31C0                       xor	ax,ax
02045 0AB7           50                         push	ax
02046 0AB8           31C0                       xor	ax,ax
02047 0ABA           50                         push	ax
02048 0ABB           E8         FC59            call	_gdc_fill
02049 0ABE           83C4                   0A  add	sp,*$A
02050                                           !BCC_EOS
02051 0AC1           B8                   0001  mov	ax,*1
02052 0AC4           50                         push	ax
02053 0AC5           E8         F63F            call	_gdc_display
02054 0AC8           44                         inc	sp
02055 0AC9           44                         inc	sp
02056                                           !BCC_EOS
02057 0ACA           B8                   FFFF  mov	ax,#$FFFF
02058 0ACD           50                         push	ax
02059 0ACE           E8         F6FA            call	_gdc_pattern
02060 0AD1           44                         inc	sp
02061 0AD2           44                         inc	sp
02062                                           !BCC_EOS
02063 0AD3           31C0                       xor	ax,ax
02064 0AD5           50                         push	ax
02065 0AD6           A1         0000>           mov	ax,[_Xmax]
02066 0AD9           48                         dec	ax
02067 0ADA           50                         push	ax
02068 0ADB           A1         0000>           mov	ax,[_Ymax]
02069 0ADE           48                         dec	ax
02070 0ADF           50                         push	ax
02071 0AE0           A1         0000>           mov	ax,[_Xmax]
02072 0AE3           48                         dec	ax
02073 0AE4           50                         push	ax
02074 0AE5           E8         FAF3            call	_gdc_line
02075 0AE8           83C4                   08  add	sp,*8
02076                                           !BCC_EOS
02077 0AEB           31C0                       xor	ax,ax
02078 0AED           50                         push	ax
02079 0AEE           31C0                       xor	ax,ax
02080 0AF0           50                         push	ax
02081 0AF1           31C0                       xor	ax,ax
02082 0AF3           50                         push	ax
02083 0AF4           A1         0000>           mov	ax,[_Xmax]
02084 0AF7           48                         dec	ax
02085 0AF8           50                         push	ax
02086 0AF9           E8         FADF            call	_gdc_line
02087 0AFC           83C4                   08  add	sp,*8
02088                                           !BCC_EOS
02089 0AFF           A1         0000>           mov	ax,[_Ymax]
02090 0B02           48                         dec	ax
02091 0B03           50                         push	ax
02092 0B04           31C0                       xor	ax,ax
02093 0B06           50                         push	ax
02094 0B07           31C0                       xor	ax,ax
02095 0B09           50                         push	ax
02096 0B0A           31C0                       xor	ax,ax
02097 0B0C           50                         push	ax
02098 0B0D           E8         FACB            call	_gdc_line
02099 0B10           83C4                   08  add	sp,*8
02100                                           !BCC_EOS
02101 0B13           A1         0000>           mov	ax,[_Ymax]
02102 0B16           48                         dec	ax
02103 0B17           50                         push	ax
02104 0B18           A1         0000>           mov	ax,[_Xmax]
02105 0B1B           48                         dec	ax
02106 0B1C           50                         push	ax
02107 0B1D           A1         0000>           mov	ax,[_Ymax]
02108 0B20           48                         dec	ax
02109 0B21           50                         push	ax
02110 0B22           31C0                       xor	ax,ax
02111 0B24           50                         push	ax
02112 0B25           E8         FAB3            call	_gdc_line
02113 0B28           83C4                   08  add	sp,*8
02114                                           !BCC_EOS
02115 0B2B           31C0                       xor	ax,ax
02116 0B2D           50                         push	ax
02117 0B2E           E8         F7F2            call	_gdc_mode
02118 0B31           44                         inc	sp
02119 0B32           44                         inc	sp
02120                                           !BCC_EOS
02121 0B33           C746         FA      0020  mov	word ptr -6+main.off[bp],*$20
02122                                           !BCC_EOS
02123 0B38           C746         F8      005F  mov	word ptr -8+main.off[bp],*$5F
02124                                           !BCC_EOS
02125 0B3D           C746         F6      000C  mov	word ptr -$A+main.off[bp],*$C
02126                                           !BCC_EOS
02127                                           !BCC_EOS
02128 0B42           EB           15            jmp .64
02129                       00000B44>           .65:
02130 0B44           FF76         F6            push	-$A+main.off[bp]
02131 0B47           FF76         F8            push	-8+main.off[bp]
02132 0B4A           FF76         F6            push	-$A+main.off[bp]
02133 0B4D           FF76         FA            push	-6+main.off[bp]
02134 0B50           E8         FA88            call	_gdc_line
02135 0B53           83C4                   08  add	sp,*8
02136                                           !BCC_EOS
02137                       00000B56>           .63:
02138 0B56           FF46         F6            inc	word ptr -$A+main.off[bp]
02139                       00000B59>           .64:
02140 0B59           837E         F6        22  cmp	word ptr -$A+main.off[bp],*$22
02141 0B5D           7C           E5            jl 	.65
02142                       00000B5F>           .66:
02143                       00000B5F>           .62:
02144 0B5F           B8                   0002  mov	ax,*2
02145 0B62           50                         push	ax
02146 0B63           E8         F7BD            call	_gdc_mode
02147 0B66           44                         inc	sp
02148 0B67           44                         inc	sp
02149                                           !BCC_EOS
02150                                           !BCC_EOS
02151                                           !BCC_EOS
02152 0B68           EB           15            jmp .69
02153                       00000B6A>           .6A:
02154 0B6A           FF76         F6            push	-$A+main.off[bp]
02155 0B6D           FF76         F8            push	-8+main.off[bp]
02156 0B70           FF76         F6            push	-$A+main.off[bp]
02157 0B73           FF76         FA            push	-6+main.off[bp]
02158 0B76           E8         FA62            call	_gdc_line
02159 0B79           83C4                   08  add	sp,*8
02160                                           !BCC_EOS
02161                       00000B7C>           .68:
02162 0B7C           FF46         F6            inc	word ptr -$A+main.off[bp]
02163                       00000B7F>           .69:
02164 0B7F           837E         F6        42  cmp	word ptr -$A+main.off[bp],*$42
02165 0B83           7C           E5            jl 	.6A
02166                       00000B85>           .6B:
02167                       00000B85>           .67:
02168 0B85           B8                   0003  mov	ax,*3
02169 0B88           50                         push	ax
02170 0B89           E8         F797            call	_gdc_mode
02171 0B8C           44                         inc	sp
02172 0B8D           44                         inc	sp
02173                                           !BCC_EOS
02174                                           !BCC_EOS
02175                                           !BCC_EOS
02176 0B8E           EB           15            jmp .6E
02177                       00000B90>           .6F:
02178 0B90           FF76         F6            push	-$A+main.off[bp]
02179 0B93           FF76         F8            push	-8+main.off[bp]
02180 0B96           FF76         F6            push	-$A+main.off[bp]
02181 0B99           FF76         FA            push	-6+main.off[bp]
02182 0B9C           E8         FA3C            call	_gdc_line
02183 0B9F           83C4                   08  add	sp,*8
02184                                           !BCC_EOS
02185                       00000BA2>           .6D:
02186 0BA2           FF46         F6            inc	word ptr -$A+main.off[bp]
02187                       00000BA5>           .6E:
02188 0BA5           837E         F6        62  cmp	word ptr -$A+main.off[bp],*$62
02189 0BA9           7C           E5            jl 	.6F
02190                       00000BAB>           .70:
02191                       00000BAB>           .6C:
02192 0BAB           B8                   0001  mov	ax,*1
02193 0BAE           50                         push	ax
02194 0BAF           E8         F771            call	_gdc_mode
02195 0BB2           44                         inc	sp
02196 0BB3           44                         inc	sp
02197                                           !BCC_EOS
02198                                           !BCC_EOS
02199                                           !BCC_EOS
02200 0BB4           EB           15            jmp .73
02201                       00000BB6>           .74:
02202 0BB6           FF76         F6            push	-$A+main.off[bp]
02203 0BB9           FF76         F8            push	-8+main.off[bp]
02204 0BBC           FF76         F6            push	-$A+main.off[bp]
02205 0BBF           FF76         FA            push	-6+main.off[bp]
02206 0BC2           E8         FA16            call	_gdc_line
02207 0BC5           83C4                   08  add	sp,*8
02208                                           !BCC_EOS
02209                       00000BC8>           .72:
02210 0BC8           FF46         F6            inc	word ptr -$A+main.off[bp]
02211                       00000BCB>           .73:
02212 0BCB           817E         F6      0082  cmp	word ptr -$A+main.off[bp],#$82
02213 0BD0           7C           E4            jl 	.74
02214                       00000BD2>           .75:
02215                       00000BD2>           .71:
02216 0BD2           31C0                       xor	ax,ax
02217 0BD4           50                         push	ax
02218 0BD5           E8         F74B            call	_gdc_mode
02219 0BD8           44                         inc	sp
02220 0BD9           44                         inc	sp
02221                                           !BCC_EOS
02222 0BDA           B8                   0022  mov	ax,*$22
02223 0BDD           50                         push	ax
02224 0BDE           B8                   004E  mov	ax,*$4E
02225 0BE1           50                         push	ax
02226 0BE2           B8                   0064  mov	ax,*$64
02227 0BE5           50                         push	ax
02228 0BE6           B8                   0064  mov	ax,*$64
02229 0BE9           50                         push	ax
02230 0BEA           E8         F9EE            call	_gdc_line
02231 0BED           83C4                   08  add	sp,*8
02232                                           !BCC_EOS
02233 0BF0           B8                   0001  mov	ax,*1
02234 0BF3           50                         push	ax
02235 0BF4           E8         F72C            call	_gdc_mode
02236 0BF7           44                         inc	sp
02237 0BF8           44                         inc	sp
02238                                           !BCC_EOS
02239 0BF9           B8                   01D5  mov	ax,#$1D5
02240 0BFC           50                         push	ax
02241 0BFD           B8                   0275  mov	ax,#$275
02242 0C00           50                         push	ax
02243 0C01           B8                   000A  mov	ax,*$A
02244 0C04           50                         push	ax
02245 0C05           B8                   000A  mov	ax,*$A
02246 0C08           50                         push	ax
02247 0C09           E8         F9CF            call	_gdc_line
02248 0C0C           83C4                   08  add	sp,*8
02249                                           !BCC_EOS
02250 0C0F           31C0                       xor	ax,ax
02251 0C11           50                         push	ax
02252 0C12           E8         F70E            call	_gdc_mode
02253 0C15           44                         inc	sp
02254 0C16           44                         inc	sp
02255                                           !BCC_EOS
02256 0C17           B8                   01CC  mov	ax,#$1CC
02257 0C1A           50                         push	ax
02258 0C1B           B8                   000F  mov	ax,*$F
02259 0C1E           50                         push	ax
02260 0C1F           B8                   000A  mov	ax,*$A
02261 0C22           50                         push	ax
02262 0C23           B8                   0001  mov	ax,*1
02263 0C26           50                         push	ax
02264 0C27           E8         F9B1            call	_gdc_line
02265 0C2A           83C4                   08  add	sp,*8
02266                                           !BCC_EOS
02267 0C2D           B8                   01CC  mov	ax,#$1CC
02268 0C30           50                         push	ax
02269 0C31           B8                   0270  mov	ax,#$270
02270 0C34           50                         push	ax
02271 0C35           B8                   000A  mov	ax,*$A
02272 0C38           50                         push	ax
02273 0C39           B8                   027E  mov	ax,#$27E
02274 0C3C           50                         push	ax
02275 0C3D           E8         F99B            call	_gdc_line
02276 0C40           83C4                   08  add	sp,*8
02277                                           !BCC_EOS
02278 0C43           E8         FC52            call	_gchar_test
02279                                           !BCC_EOS
02280 0C46           B8                   FFFF  mov	ax,#$FFFF
02281 0C49           50                         push	ax
02282 0C4A           E8         F57E            call	_gdc_pattern
02283 0C4D           44                         inc	sp
02284 0C4E           44                         inc	sp
02285                                           !BCC_EOS
02286 0C4F           31C0                       xor	ax,ax
02287 0C51           50                         push	ax
02288 0C52           B8                   012C  mov	ax,#$12C
02289 0C55           50                         push	ax
02290 0C56           B8                   0257  mov	ax,#$257
02291 0C59           50                         push	ax
02292 0C5A           B8                   0028  mov	ax,*$28
02293 0C5D           50                         push	ax
02294 0C5E           E8         F7E5            call	_gdc_hline
02295 0C61           83C4                   08  add	sp,*8
02296                                           !BCC_EOS
02297 0C64           B8                   011D  mov	ax,#$11D
02298 0C67           50                         push	ax
02299 0C68           B8                   0028  mov	ax,*$28
02300 0C6B           50                         push	ax
02301 0C6C           B8                   0127  mov	ax,#$127
02302 0C6F           50                         push	ax
02303 0C70           B8                   0028  mov	ax,*$28
02304 0C73           50                         push	ax
02305 0C74           E8         F964            call	_gdc_line
02306 0C77           83C4                   08  add	sp,*8
02307                                           !BCC_EOS
02308 0C7A           B8                   011D  mov	ax,#$11D
02309 0C7D           50                         push	ax
02310 0C7E           B8                   0257  mov	ax,#$257
02311 0C81           50                         push	ax
02312 0C82           B8                   0127  mov	ax,#$127
02313 0C85           50                         push	ax
02314 0C86           B8                   0257  mov	ax,#$257
02315 0C89           50                         push	ax
02316 0C8A           E8         F94E            call	_gdc_line
02317 0C8D           83C4                   08  add	sp,*8
02318                                           !BCC_EOS
02319 0C90           31C0                       xor	ax,ax
02320 0C92           50                         push	ax
02321 0C93           B8                   014A  mov	ax,#$14A
02322 0C96           50                         push	ax
02323 0C97           B8                   024F  mov	ax,#$24F
02324 0C9A           50                         push	ax
02325 0C9B           B8                   0020  mov	ax,*$20
02326 0C9E           50                         push	ax
02327 0C9F           E8         F7A4            call	_gdc_hline
02328 0CA2           83C4                   08  add	sp,*8
02329                                           !BCC_EOS
02330 0CA5           B8                   013B  mov	ax,#$13B
02331 0CA8           50                         push	ax
02332 0CA9           B8                   0020  mov	ax,*$20
02333 0CAC           50                         push	ax
02334 0CAD           B8                   0145  mov	ax,#$145
02335 0CB0           50                         push	ax
02336 0CB1           B8                   0020  mov	ax,*$20
02337 0CB4           50                         push	ax
02338 0CB5           E8         F923            call	_gdc_line
02339 0CB8           83C4                   08  add	sp,*8
02340                                           !BCC_EOS
02341 0CBB           B8                   013B  mov	ax,#$13B
02342 0CBE           50                         push	ax
02343 0CBF           B8                   024F  mov	ax,#$24F
02344 0CC2           50                         push	ax
02345 0CC3           B8                   0145  mov	ax,#$145
02346 0CC6           50                         push	ax
02347 0CC7           B8                   024F  mov	ax,#$24F
02348 0CCA           50                         push	ax
02349 0CCB           E8         F90D            call	_gdc_line
02350 0CCE           83C4                   08  add	sp,*8
02351                                           !BCC_EOS
02352 0CD1           31C0                       xor	ax,ax
02353 0CD3           50                         push	ax
02354 0CD4           B8                   0168  mov	ax,#$168
02355 0CD7           50                         push	ax
02356 0CD8           B8                   0257  mov	ax,#$257
02357 0CDB           50                         push	ax
02358 0CDC           B8                   0020  mov	ax,*$20
02359 0CDF           50                         push	ax
02360 0CE0           E8         F763            call	_gdc_hline
02361 0CE3           83C4                   08  add	sp,*8
02362                                           !BCC_EOS
02363 0CE6           B8                   0159  mov	ax,#$159
02364 0CE9           50                         push	ax
02365 0CEA           B8                   0020  mov	ax,*$20
02366 0CED           50                         push	ax
02367 0CEE           B8                   0163  mov	ax,#$163
02368 0CF1           50                         push	ax
02369 0CF2           B8                   0020  mov	ax,*$20
02370 0CF5           50                         push	ax
02371 0CF6           E8         F8E2            call	_gdc_line
02372 0CF9           83C4                   08  add	sp,*8
02373                                           !BCC_EOS
02374 0CFC           B8                   0159  mov	ax,#$159
02375 0CFF           50                         push	ax
02376 0D00           B8                   0257  mov	ax,#$257
02377 0D03           50                         push	ax
02378 0D04           B8                   0163  mov	ax,#$163
02379 0D07           50                         push	ax
02380 0D08           B8                   0257  mov	ax,#$257
02381 0D0B           50                         push	ax
02382 0D0C           E8         F8CC            call	_gdc_line
02383 0D0F           83C4                   08  add	sp,*8
02384                                           !BCC_EOS
02385 0D12           B8                   0003  mov	ax,*3
02386 0D15           50                         push	ax
02387 0D16           E8         F60A            call	_gdc_mode
02388 0D19           44                         inc	sp
02389 0D1A           44                         inc	sp
02390                                           !BCC_EOS
02391 0D1B           B8                   0078  mov	ax,*$78
02392 0D1E           50                         push	ax
02393 0D1F           B8                   0251  mov	ax,#$251
02394 0D22           50                         push	ax
02395 0D23           B8                   0014  mov	ax,*$14
02396 0D26           50                         push	ax
02397 0D27           B8                   024D  mov	ax,#$24D
02398 0D2A           50                         push	ax
02399 0D2B           E8         F8AD            call	_gdc_line
02400 0D2E           83C4                   08  add	sp,*8
02401                                           !BCC_EOS
02402 0D31           31C0                       xor	ax,ax
02403 0D33           50                         push	ax
02404 0D34           E8         F5EC            call	_gdc_mode
02405 0D37           44                         inc	sp
02406 0D38           44                         inc	sp
02407                                           !BCC_EOS
02408 0D39           B8                   0014  mov	ax,*$14
02409 0D3C           50                         push	ax
02410 0D3D           B8                   025D  mov	ax,#$25D
02411 0D40           50                         push	ax
02412 0D41           B8                   0078  mov	ax,*$78
02413 0D44           50                         push	ax
02414 0D45           B8                   0261  mov	ax,#$261
02415 0D48           50                         push	ax
02416 0D49           E8         F88F            call	_gdc_line
02417 0D4C           83C4                   08  add	sp,*8
02418                                           !BCC_EOS
02419 0D4F           31C0                       xor	ax,ax
02420 0D51           50                         push	ax
02421 0D52           E8         F5CE            call	_gdc_mode
02422 0D55           44                         inc	sp
02423 0D56           44                         inc	sp
02424                                           !BCC_EOS
02425 0D57           B8                   0131  mov	ax,#$131
02426 0D5A           50                         push	ax
02427 0D5B           B8                   0257  mov	ax,#$257
02428 0D5E           50                         push	ax
02429 0D5F           B8                   0131  mov	ax,#$131
02430 0D62           50                         push	ax
02431 0D63           B8                   0028  mov	ax,*$28
02432 0D66           50                         push	ax
02433 0D67           E8         F871            call	_gdc_line
02434 0D6A           83C4                   08  add	sp,*8
02435                                           !BCC_EOS
02436 0D6D           B8                   014F  mov	ax,#$14F
02437 0D70           50                         push	ax
02438 0D71           B8                   024F  mov	ax,#$24F
02439 0D74           50                         push	ax
02440 0D75           B8                   014F  mov	ax,#$14F
02441 0D78           50                         push	ax
02442 0D79           B8                   0020  mov	ax,*$20
02443 0D7C           50                         push	ax
02444 0D7D           E8         F85B            call	_gdc_line
02445 0D80           83C4                   08  add	sp,*8
02446                                           !BCC_EOS
02447 0D83           B8                   016D  mov	ax,#$16D
02448 0D86           50                         push	ax
02449 0D87           B8                   0257  mov	ax,#$257
02450 0D8A           50                         push	ax
02451 0D8B           B8                   016D  mov	ax,#$16D
02452 0D8E           50                         push	ax
02453 0D8F           B8                   0020  mov	ax,*$20
02454 0D92           50                         push	ax
02455 0D93           E8         F845            call	_gdc_line
02456 0D96           83C4                   08  add	sp,*8
02457                                           !BCC_EOS
02458 0D99           C746         F6      0174  mov	word ptr -$A+main.off[bp],#$174
02459                                           !BCC_EOS
02460 0D9E           C746         FA      0020  mov	word ptr -6+main.off[bp],*$20
02461                                           !BCC_EOS
02462                                           !BCC_EOS
02463 0DA3           EB           2E            jmp .78
02464                       00000DA5>           .79:
02465 0DA5           8B46         FA            mov	ax,-6+main.off[bp]
02466 0DA8           05                   000E  add	ax,*$E
02467 0DAB           8946         F8            mov	-8+main.off[bp],ax
02468 0DAE           3D                   0257  cmp	ax,#$257
02469 0DB1           7E           05            jle 	.7A
02470                       00000DB3>           .7B:
02471 0DB3           C746         F8      0257  mov	word ptr -8+main.off[bp],#$257
02472                                           !BCC_EOS
02473                       00000DB8>           .7A:
02474 0DB8           FF76         F6            push	-$A+main.off[bp]
02475 0DBB           FF76         F8            push	-8+main.off[bp]
02476 0DBE           FF76         F6            push	-$A+main.off[bp]
02477 0DC1           FF76         FA            push	-6+main.off[bp]
02478 0DC4           E8         F814            call	_gdc_line
02479 0DC7           83C4                   08  add	sp,*8
02480                                           !BCC_EOS
02481                       00000DCA>           .77:
02482 0DCA           8B46         FA            mov	ax,-6+main.off[bp]
02483 0DCD           05                   0010  add	ax,*$10
02484 0DD0           8946         FA            mov	-6+main.off[bp],ax
02485                       00000DD3>           .78:
02486 0DD3           817E         FA      0257  cmp	word ptr -6+main.off[bp],#$257
02487 0DD8           7C           CB            jl 	.79
02488                       00000DDA>           .7C:
02489                       00000DDA>           .76:
02490 0DDA           31C0                       xor	ax,ax
02491 0DDC           50                         push	ax
02492 0DDD           E8         F543            call	_gdc_mode
02493 0DE0           44                         inc	sp
02494 0DE1           44                         inc	sp
02495                                           !BCC_EOS
02496 0DE2           B8                   00D4  mov	ax,#$D4
02497 0DE5           50                         push	ax
02498 0DE6           B8                   027F  mov	ax,#$27F
02499 0DE9           50                         push	ax
02500 0DEA           B8                   00C8  mov	ax,#$C8
02501 0DED           50                         push	ax
02502 0DEE           31C0                       xor	ax,ax
02503 0DF0           50                         push	ax
02504 0DF1           E8         F7E7            call	_gdc_line
02505 0DF4           83C4                   08  add	sp,*8
02506                                           !BCC_EOS
02507 0DF7           B8                   00D4  mov	ax,#$D4
02508 0DFA           50                         push	ax
02509 0DFB           31C0                       xor	ax,ax
02510 0DFD           50                         push	ax
02511 0DFE           B8                   00E0  mov	ax,#$E0
02512 0E01           50                         push	ax
02513 0E02           B8                   027F  mov	ax,#$27F
02514 0E05           50                         push	ax
02515 0E06           E8         F7D2            call	_gdc_line
02516 0E09           83C4                   08  add	sp,*8
02517                                           !BCC_EOS
02518 0E0C           B8                   00EC  mov	ax,#$EC
02519 0E0F           50                         push	ax
02520 0E10           31C0                       xor	ax,ax
02521 0E12           50                         push	ax
02522 0E13           B8                   00E0  mov	ax,#$E0
02523 0E16           50                         push	ax
02524 0E17           B8                   027F  mov	ax,#$27F
02525 0E1A           50                         push	ax
02526 0E1B           E8         F7BD            call	_gdc_line
02527 0E1E           83C4                   08  add	sp,*8
02528                                           !BCC_EOS
02529 0E21           B8                   00EC  mov	ax,#$EC
02530 0E24           50                         push	ax
02531 0E25           B8                   027F  mov	ax,#$27F
02532 0E28           50                         push	ax
02533 0E29           B8                   00F8  mov	ax,#$F8
02534 0E2C           50                         push	ax
02535 0E2D           31C0                       xor	ax,ax
02536 0E2F           50                         push	ax
02537 0E30           E8         F7A8            call	_gdc_line
02538 0E33           83C4                   08  add	sp,*8
02539                                           !BCC_EOS
02540 0E36           B8                   0176  mov	ax,#$176
02541 0E39           50                         push	ax
02542 0E3A           B8                   027E  mov	ax,#$27E
02543 0E3D           50                         push	ax
02544 0E3E           B8                   01DA  mov	ax,#$1DA
02545 0E41           50                         push	ax
02546 0E42           B8                   027E  mov	ax,#$27E
02547 0E45           50                         push	ax
02548 0E46           E8         F792            call	_gdc_line
02549 0E49           83C4                   08  add	sp,*8
02550                                           !BCC_EOS
02551 0E4C           B8                   0003  mov	ax,*3
02552 0E4F           50                         push	ax
02553 0E50           E8         F4D0            call	_gdc_mode
02554 0E53           44                         inc	sp
02555 0E54           44                         inc	sp
02556                                           !BCC_EOS
02557 0E55           B8                   0144  mov	ax,#$144
02558 0E58           50                         push	ax
02559 0E59           B8                   027E  mov	ax,#$27E
02560 0E5C           50                         push	ax
02561 0E5D           B8                   017B  mov	ax,#$17B
02562 0E60           50                         push	ax
02563 0E61           B8                   027E  mov	ax,#$27E
02564 0E64           50                         push	ax
02565 0E65           E8         F773            call	_gdc_line
02566 0E68           83C4                   08  add	sp,*8
02567                                           !BCC_EOS
02568 0E6B           E8         F590            call	_gdc_done
02569                                           !BCC_EOS
02570 0E6E           BB                   0020> mov	bx,#.7D
02571 0E71           53                         push	bx
02572 0E72           E8         0000>           call	_printf
02573 0E75           44                         inc	sp
02574 0E76           44                         inc	sp
02575                                           !BCC_EOS
02576 0E77           31C0                       xor	ax,ax
02577 0E79           50                         push	ax
02578 0E7A           E8         0000>           call	_exit
02579 0E7D           44                         inc	sp
02580 0E7E           44                         inc	sp
02581                                           !BCC_EOS
02582 0E7F           83C4                   06  add	sp,*6
02583                                           if main.off=0
02584 0E82           5E                         pop	si
02585 0E83           5F                         pop	di
02586                                           endif
02587 0E84           5D                         pop	bp
02588 0E85           C3                         ret
02589                                           ! Register BX used in function main
02590                       00000000            main.off = 0
02591 0020                                      .data
02592                       00000020>           .7D:
02593                       00000020>           .7E:
02594 0020                        0A            .byte	$A
02595 0021                        45            .ascii	"End test of uPD7220"
02596 0034                        0A            .byte	$A
02597 0035                        00            .byte	0
02598                       00000036>           .61:
02599                       00000036>           .7F:
02600 0036                        58            .ascii	"Xmax = %d  Ymax = %d"
02601 004A                        0A            .byte	$A
02602 004B                        00            .byte	0
02603                       0000004C>           .60:
02604                       0000004C>           .80:
02605 004C                        45            .ascii	"Error:  Xmax = %d"
02606 005D                        0A            .byte	$A
02607 005E                        00            .byte	0
02608                       0000005F>           .56:
02609                       0000005F>           .81:
02610 005F                        48            .ascii	"HFP=%d  HS=%d  HBP=%d"
02611 0074                        0A            .byte	$A
02612 0075                        00            .byte	0
02613                       00000076>           .50:
02614                       00000076>           .82:
02615 0076                        0A            .byte	$A
02616 0077                        53            .ascii	"Start test of uPD7220"
02617 008C                        0A            .byte	$A
02618 008D                        00            .byte	0
02619                       0000008E>           .36:
02620                       0000008E>           .83:
02621 008E                        64            .ascii	"dir=%d, DC=%d, D=%d, D2=%d, D1=%d"
02622 00AF                        0A            .byte	$A
02623 00B0                        00            .byte	0
02624 00B1                                      .bss
02625 00B1                                      .comm	_Ypitch_wds,2
02626 00B1                                      .comm	_start_address,4
02627 00B1                                      .comm	_Zoom_Display,1
02628 00B1                                      .comm	_HS,1
02629 00B1                                      .comm	_dbglvl,1
02630 00B1                                      .comm	_currY,2
02631 00B1                                      .comm	_HFP,1
02632 00B1                                      .comm	_Ypitch,2
02633 00B1                                      .comm	_Ymax,2
02634 00B1                                      .comm	_HBP,1
02635 00B1                                      .comm	_Mode,1
02636 00B1                                      .comm	_Xmax,2
02637 00B1                                      .comm	_Zoom_Draw,1
02638 00B1                                      .comm	_currX,2
02639 00B1                                      .comm	_area,8
02640                                           ! 0 errors detected

Symbols:
.1                          0 002B R   .10                         0 01AB R   
.11                         0 01C7 R   .13                         0 0332 R   
.14                         0 0330 R   .16                         0 040E R   
.17                         0 0401 R   .18                         0 0401 R   
.19                         0 040E R   .1A                         0 041B R   
.1B                         0 040E R   .1C                         0 040E R   
.1D                         0 041B R   .1E                         0 0466 R   
.1F                         0 0454 R   .2                          0 001E R   
.20                         0 04F5 R   .21                         0 0489 R   
.22                         0 04E9 R   .23                         0 04AB R   
.24                         0 052A R   .25                         0 050D R   
.26                         0 058F R   .27                         0 0545 R   
.28                         0 05D6 R   .29                         0 059D R   
.2A                         3 0000 R   .2B                         0 0612 R   
.2C                         0 0602 R   .2D                         0 062F R   
.2E                         0 061F R   .2F                         0 064D R   
.3                          0 001E R   .30                         0 0637 R   
.31                         0 0659 R   .32                         0 066B R   
.33                         0 066D R   .34                         0 06CB R   
.35                         0 06AF R   .36                         3 008E R   
.37                         0 074A R   .38                         0 073F R   
.39                         0 0753 R   .3A                         0 076D R   
.3B                         0 075B R   .3C                         0 0787 R   
.3D                         0 0775 R   .3E                         0 082A R   
.3F                         0 081F R   .4                          0 002B R   
.40                         0 0833 R   .41                         0 084D R   
.42                         0 083B R   .43                         0 0867 R   
.44                         0 0855 R   .45                         0 0886 R   
.46                         0 087B R   .47                         0 087E R   
.48                         0 0869 R   .49                         0 0886 R   
.4A                         3 0018 R   .4B                         0 093F R   
.4C                         0 0933 R   .4D                         0 0936 R   
.4E                         0 08BF R   .4F                         0 093F R   
.5                          0 004D R   .50                         3 0076 R   
.51                         0 09E2 R   .52                         0 09CB R   
.53                         0 09C5 R   .54                         0 0A12 R   
.55                         0 09E8 R   .56                         3 005F R   
.57                         0 0A3E R   .58                         0 0A36 R   
.59                         0 0A75 R   .5A                         0 0A4E R   
.5B                         0 0A46 R   .5C                         0 0A75 R   
.5D                         0 0A5E R   .5E                         0 0A56 R   
.5F                         0 0A75 R   .6                          0 0040 R   
.60                         3 004C R   .61                         3 0036 R   
.62                         0 0B5F R   .63                         0 0B56 R   
.64                         0 0B59 R   .65                         0 0B44 R   
.66                         0 0B5F R   .67                         0 0B85 R   
.68                         0 0B7C R   .69                         0 0B7F R   
.6A                         0 0B6A R   .6B                         0 0B85 R   
.6C                         0 0BAB R   .6D                         0 0BA2 R   
.6E                         0 0BA5 R   .6F                         0 0B90 R   
.7                          0 0040 R   .70                         0 0BAB R   
.71                         0 0BD2 R   .72                         0 0BC8 R   
.73                         0 0BCB R   .74                         0 0BB6 R   
.75                         0 0BD2 R   .76                         0 0DDA R   
.77                         0 0DCA R   .78                         0 0DD3 R   
.79                         0 0DA5 R   .7A                         0 0DB8 R   
.7B                         0 0DB3 R   .7C                         0 0DDA R   
.7D                         3 0020 R   .7E                         3 0020 R   
.7F                         3 0036 R   .8                          0 004D R   
.80                         3 004C R   .81                         3 005F R   
.82                         3 0076 R   .83                         3 008E R   
.9                          0 0100 R   .A                          0 00F3 R   
.B                          0 00FA R   .C                          0 00E3 R   
.D                          0 0100 R   .E                          0 01C7 R   
.F                          0 01BB R   _Fill                       3 0010 R   
_HBP                        3 0001 R C _HFP                        3 0001 R C 
_HS                         3 0001 R C _Mode                       3 0001 R C 
_Xmax                       3 0002 R C _Ymax                       3 0002 R C 
_Ypitch                     3 0002 R C _Ypitch_wds                 3 0002 R C 
_Zoom_Display               3 0001 R C _Zoom_Draw                  3 0001 R C 
___mkargv                   F 0000 R I _area                       3 0008 R C 
_atoi                       F 0000 R I _currX                      3 0002 R C 
_currY                      3 0002 R C _dbglvl                     3 0001 R C 
_exit                       F 0000 R I _gchar_test                 0 0898 R E 
_gdc_Dparam                 0 041D R E _gdc_cchar                  0 0155 R E 
_gdc_display                0 0107 R E _gdc_done                   0 03FE R E 
_gdc_fill                   0 0717 R E _gdc_fill2                  0 07F7 R E 
_gdc_hline                  0 0446 R E _gdc_init                   0 0349 R E 
_gdc_line                   0 05DB R E _gdc_mask                   0 02FB R E 
_gdc_mode                   0 0323 R E _gdc_pattern                0 01CB R E 
_gdc_pitch                  0 017B R E _gdc_pram                   0 0194 R E 
_gdc_putc                   0 001B R E _gdc_putp                   0 003D R E 
_gdc_reset                  0 012E R E _gdc_setcursor              0 0246 R E 
_gdc_start                  0 02ED R E _gdc_sync                   0 0119 R E 
_gdc_sync_params            0 005F R E _gdc_vsync                  0 0143 R E 
_gdc_zoom_display           0 01E6 R E _gdc_zoom_draw              0 0216 R E 
_inp                        0 0000 R   _main                       0 0983 R E 
_outp                       0 000D R   _printf                     F 0000 R I 
_start_address              3 0004 R C gchar_test.off              0 0000 A   
gdc_Dparam.off              0 0004 A   gdc_cchar.off               0 0004 A   
gdc_display.off             0 0004 A   gdc_done.off                0 0004 A   
gdc_fill.off                0 0000 A   gdc_fill2.off               0 0000 A   
gdc_hline.off               0 0004 A   gdc_init.off                0 0000 A   
gdc_line.off                0 0000 A   gdc_mask.off                0 0004 A   
gdc_mode.off                0 0004 A   gdc_pattern.off             0 0000 A   
gdc_pitch.off               0 0004 A   gdc_pram.off                0 0000 A   
gdc_putc.off                0 0004 A   gdc_putp.off                0 0004 A   
gdc_reset.off               0 0004 A   gdc_setcursor.off           0 0000 A   
gdc_start.off               0 0004 A   gdc_sync.off                0 0004 A   
gdc_sync_params.off         0 0000 A   gdc_vsync.off               0 0004 A   
gdc_zoom_display.off        0 0004 A   gdc_zoom_draw.off           0 0004 A   
laddul                      F 0000 R I landl                       F 0000 R I 
lorul                       F 0000 R I main.off                    0 0000 A   

00000 errors
00000 warnings
