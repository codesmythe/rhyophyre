                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module nvtest
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _nvtest
                             12 	.globl _put_nvram
                             13 	.globl _get_nvram
                             14 	.globl _rtc_set_loc
                             15 	.globl _rtc_get_loc
                             16 	.globl _cprintf
                             17 	.globl _nvBits
                             18 	.globl _nvValue
                             19 ;--------------------------------------------------------
                             20 ; special function registers
                             21 ;--------------------------------------------------------
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _DATA
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area _INITIALIZED
                             30 ;--------------------------------------------------------
                             31 ; absolute external ram data
                             32 ;--------------------------------------------------------
                             33 	.area _DABS (ABS)
                             34 ;--------------------------------------------------------
                             35 ; global & static initialisations
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _GSINIT
                             39 	.area _GSFINAL
                             40 	.area _GSINIT
                             41 ;--------------------------------------------------------
                             42 ; Home
                             43 ;--------------------------------------------------------
                             44 	.area _HOME
                             45 	.area _HOME
                             46 ;--------------------------------------------------------
                             47 ; code
                             48 ;--------------------------------------------------------
                             49 	.area _CODE
                             50 ;nvtest.c:19: static byte test(byte *patt)
                             51 ;	---------------------------------
                             52 ; Function test
                             53 ; ---------------------------------
   0000                      54 _test:
   0000 DD E5         [15]   55 	push	ix
   0002 DD 21 00 00   [14]   56 	ld	ix,#0
   0006 DD 39         [15]   57 	add	ix,sp
   0008 21 E1 FF      [10]   58 	ld	hl, #-31
   000B 39            [11]   59 	add	hl, sp
   000C F9            [ 6]   60 	ld	sp, hl
                             61 ;nvtest.c:24: put_nvram(patt);
   000D DD 6E 04      [19]   62 	ld	l, 4 (ix)
   0010 DD 66 05      [19]   63 	ld	h, 5 (ix)
   0013 E5            [11]   64 	push	hl
   0014 CDr00r00      [17]   65 	call	_put_nvram
   0017 F1            [10]   66 	pop	af
                             67 ;nvtest.c:25: get_nvram(nv);
   0018 21 00 00      [10]   68 	ld	hl, #0
   001B 39            [11]   69 	add	hl, sp
   001C 4D            [ 4]   70 	ld	c, l
   001D 44            [ 4]   71 	ld	b, h
   001E 59            [ 4]   72 	ld	e, c
   001F 50            [ 4]   73 	ld	d, b
   0020 C5            [11]   74 	push	bc
   0021 D5            [11]   75 	push	de
   0022 CDr00r00      [17]   76 	call	_get_nvram
   0025 F1            [10]   77 	pop	af
   0026 C1            [10]   78 	pop	bc
                             79 ;nvtest.c:26: for (i=0; i<NVRAM; i++) if (patt[i] != nv[i]) return 1;
   0027 1E 00         [ 7]   80 	ld	e, #0x00
   0029                      81 00104$:
   0029 DD 6E 04      [19]   82 	ld	l, 4 (ix)
   002C DD 66 05      [19]   83 	ld	h, 5 (ix)
   002F 16 00         [ 7]   84 	ld	d, #0x00
   0031 19            [11]   85 	add	hl, de
   0032 56            [ 7]   86 	ld	d, (hl)
   0033 6B            [ 4]   87 	ld	l, e
   0034 26 00         [ 7]   88 	ld	h, #0x00
   0036 09            [11]   89 	add	hl, bc
   0037 7E            [ 7]   90 	ld	a, (hl)
   0038 92            [ 4]   91 	sub	a, d
   0039 28 04         [12]   92 	jr	Z,00105$
   003B 2E 01         [ 7]   93 	ld	l, #0x01
   003D 18 08         [12]   94 	jr	00106$
   003F                      95 00105$:
   003F 1C            [ 4]   96 	inc	e
   0040 7B            [ 4]   97 	ld	a, e
   0041 D6 1F         [ 7]   98 	sub	a, #0x1f
   0043 38 E4         [12]   99 	jr	C,00104$
                            100 ;nvtest.c:27: return 0;
   0045 2E 00         [ 7]  101 	ld	l, #0x00
   0047                     102 00106$:
                            103 ;nvtest.c:28: }
   0047 DD F9         [10]  104 	ld	sp, ix
   0049 DD E1         [14]  105 	pop	ix
   004B C9            [10]  106 	ret
   004C                     107 _nvValue:
   004C FF                  108 	.db #0xff	; 255
   004D 00                  109 	.db #0x00	; 0
   004E FF                  110 	.db #0xff	; 255
   004F 00                  111 	.db #0x00	; 0
   0050 FF                  112 	.db #0xff	; 255
   0051 00                  113 	.db #0x00	; 0
   0052 FF                  114 	.db #0xff	; 255
   0053 00                  115 	.db #0x00	; 0
   0054 FF                  116 	.db #0xff	; 255
   0055 00                  117 	.db #0x00	; 0
   0056 FF                  118 	.db #0xff	; 255
   0057 00                  119 	.db #0x00	; 0
   0058 FF                  120 	.db #0xff	; 255
   0059 00                  121 	.db #0x00	; 0
   005A FF                  122 	.db #0xff	; 255
   005B 00                  123 	.db #0x00	; 0
   005C FF                  124 	.db #0xff	; 255
   005D 00                  125 	.db #0x00	; 0
   005E FF                  126 	.db #0xff	; 255
   005F 00                  127 	.db #0x00	; 0
   0060 FF                  128 	.db #0xff	; 255
   0061 00                  129 	.db #0x00	; 0
   0062 FF                  130 	.db #0xff	; 255
   0063 00                  131 	.db #0x00	; 0
   0064 FF                  132 	.db #0xff	; 255
   0065 00                  133 	.db #0x00	; 0
   0066 FF                  134 	.db #0xff	; 255
   0067 00                  135 	.db #0x00	; 0
   0068 FF                  136 	.db #0xff	; 255
   0069 00                  137 	.db #0x00	; 0
   006A FF                  138 	.db #0xff	; 255
   006B 00                  139 	.db #0x00	; 0
   006C                     140 _nvBits:
   006C 80                  141 	.db #0x80	; 128
   006D 10                  142 	.db #0x10	; 16
   006E 02                  143 	.db #0x02	; 2
   006F 40                  144 	.db #0x40	; 64
   0070 08                  145 	.db #0x08	; 8
   0071 01                  146 	.db #0x01	; 1
   0072 20                  147 	.db #0x20	; 32
   0073 04                  148 	.db #0x04	; 4
   0074 80                  149 	.db #0x80	; 128
   0075 10                  150 	.db #0x10	; 16
   0076 02                  151 	.db #0x02	; 2
   0077 40                  152 	.db #0x40	; 64
   0078 08                  153 	.db #0x08	; 8
   0079 01                  154 	.db #0x01	; 1
   007A 20                  155 	.db #0x20	; 32
   007B 04                  156 	.db #0x04	; 4
   007C 80                  157 	.db #0x80	; 128
   007D 10                  158 	.db #0x10	; 16
   007E 02                  159 	.db #0x02	; 2
   007F 40                  160 	.db #0x40	; 64
   0080 08                  161 	.db #0x08	; 8
   0081 01                  162 	.db #0x01	; 1
   0082 20                  163 	.db #0x20	; 32
   0083 04                  164 	.db #0x04	; 4
   0084 80                  165 	.db #0x80	; 128
   0085 10                  166 	.db #0x10	; 16
   0086 02                  167 	.db #0x02	; 2
   0087 40                  168 	.db #0x40	; 64
   0088 08                  169 	.db #0x08	; 8
   0089 01                  170 	.db #0x01	; 1
   008A 20                  171 	.db #0x20	; 32
   008B 04                  172 	.db #0x04	; 4
                            173 ;nvtest.c:30: int nvtest(void)
                            174 ;	---------------------------------
                            175 ; Function nvtest
                            176 ; ---------------------------------
   008C                     177 _nvtest::
   008C DD E5         [15]  178 	push	ix
   008E DD 21 00 00   [14]  179 	ld	ix,#0
   0092 DD 39         [15]  180 	add	ix,sp
   0094 21 DE FF      [10]  181 	ld	hl, #-34
   0097 39            [11]  182 	add	hl, sp
   0098 F9            [ 6]  183 	ld	sp, hl
                            184 ;nvtest.c:35: wp = rtc_get_loc(7|CLK) & 0x80;
   0099 3E 07         [ 7]  185 	ld	a, #0x07
   009B F5            [11]  186 	push	af
   009C 33            [ 6]  187 	inc	sp
   009D CDr00r00      [17]  188 	call	_rtc_get_loc
   00A0 33            [ 6]  189 	inc	sp
   00A1 7D            [ 4]  190 	ld	a, l
   00A2 E6 80         [ 7]  191 	and	a, #0x80
                            192 ;nvtest.c:36: printf("  DS1302 write protect is %s\n", wp ? "ON" : "OFF");
   00A4 4F            [ 4]  193 	ld	c, a
   00A5 B7            [ 4]  194 	or	a, a
   00A6 28 05         [12]  195 	jr	Z,00107$
   00A8 11r75r01      [10]  196 	ld	de, #___str_1+0
   00AB 18 03         [12]  197 	jr	00108$
   00AD                     198 00107$:
   00AD 11r78r01      [10]  199 	ld	de, #___str_2+0
   00B0                     200 00108$:
   00B0 C5            [11]  201 	push	bc
   00B1 D5            [11]  202 	push	de
   00B2 21r57r01      [10]  203 	ld	hl, #___str_0
   00B5 E5            [11]  204 	push	hl
   00B6 CDr00r00      [17]  205 	call	_cprintf
   00B9 F1            [10]  206 	pop	af
   00BA F1            [10]  207 	pop	af
   00BB C1            [10]  208 	pop	bc
                            209 ;nvtest.c:37: get_nvram(nvsave);
   00BC 21 00 00      [10]  210 	ld	hl, #0
   00BF 39            [11]  211 	add	hl, sp
   00C0 DD 75 FD      [19]  212 	ld	-3 (ix), l
   00C3 DD 74 FE      [19]  213 	ld	-2 (ix), h
   00C6 C5            [11]  214 	push	bc
   00C7 E5            [11]  215 	push	hl
   00C8 CDr00r00      [17]  216 	call	_get_nvram
   00CB F1            [10]  217 	pop	af
   00CC C1            [10]  218 	pop	bc
                            219 ;nvtest.c:38: if (wp) rtc_WP(OFF);
   00CD 79            [ 4]  220 	ld	a, c
   00CE B7            [ 4]  221 	or	a, a
   00CF 28 0B         [12]  222 	jr	Z,00102$
   00D1 C5            [11]  223 	push	bc
   00D2 AF            [ 4]  224 	xor	a, a
   00D3 57            [ 4]  225 	ld	d,a
   00D4 1E 07         [ 7]  226 	ld	e,#0x07
   00D6 D5            [11]  227 	push	de
   00D7 CDr00r00      [17]  228 	call	_rtc_set_loc
   00DA F1            [10]  229 	pop	af
   00DB C1            [10]  230 	pop	bc
   00DC                     231 00102$:
                            232 ;nvtest.c:39: printf("   Using test pattern 1\n");
   00DC C5            [11]  233 	push	bc
   00DD 21r7Cr01      [10]  234 	ld	hl, #___str_3
   00E0 E5            [11]  235 	push	hl
   00E1 CDr00r00      [17]  236 	call	_cprintf
   00E4 21r4Cr00      [10]  237 	ld	hl, #_nvValue
   00E7 E3            [19]  238 	ex	(sp),hl
   00E8 CDr00r00      [17]  239 	call	_test
   00EB F1            [10]  240 	pop	af
   00EC 7D            [ 4]  241 	ld	a, l
   00ED C1            [10]  242 	pop	bc
   00EE 47            [ 4]  243 	ld	b, a
                            244 ;nvtest.c:41: printf("   Using test pattern 2\n");
   00EF C5            [11]  245 	push	bc
   00F0 21r95r01      [10]  246 	ld	hl, #___str_4
   00F3 E5            [11]  247 	push	hl
   00F4 CDr00r00      [17]  248 	call	_cprintf
   00F7 21r4Dr00      [10]  249 	ld	hl, #(_nvValue + 0x0001)
   00FA E3            [19]  250 	ex	(sp),hl
   00FB CDr00r00      [17]  251 	call	_test
   00FE F1            [10]  252 	pop	af
   00FF 7D            [ 4]  253 	ld	a, l
   0100 C1            [10]  254 	pop	bc
   0101 80            [ 4]  255 	add	a, b
   0102 47            [ 4]  256 	ld	b, a
                            257 ;nvtest.c:43: printf("   Using test pattern 3\n");
   0103 C5            [11]  258 	push	bc
   0104 21rAEr01      [10]  259 	ld	hl, #___str_5
   0107 E5            [11]  260 	push	hl
   0108 CDr00r00      [17]  261 	call	_cprintf
   010B 21r6Cr00      [10]  262 	ld	hl, #_nvBits
   010E E3            [19]  263 	ex	(sp),hl
   010F CDr00r00      [17]  264 	call	_test
   0112 F1            [10]  265 	pop	af
   0113 7D            [ 4]  266 	ld	a, l
   0114 C1            [10]  267 	pop	bc
   0115 80            [ 4]  268 	add	a, b
   0116 47            [ 4]  269 	ld	b, a
                            270 ;nvtest.c:45: printf("   Using test pattern 4\n");
   0117 C5            [11]  271 	push	bc
   0118 21rC7r01      [10]  272 	ld	hl, #___str_6
   011B E5            [11]  273 	push	hl
   011C CDr00r00      [17]  274 	call	_cprintf
   011F 21r6Dr00      [10]  275 	ld	hl, #(_nvBits + 0x0001)
   0122 E3            [19]  276 	ex	(sp),hl
   0123 CDr00r00      [17]  277 	call	_test
   0126 F1            [10]  278 	pop	af
   0127 7D            [ 4]  279 	ld	a, l
   0128 C1            [10]  280 	pop	bc
   0129 80            [ 4]  281 	add	a, b
   012A DD 77 FF      [19]  282 	ld	-1 (ix), a
                            283 ;nvtest.c:47: put_nvram(nvsave);
   012D DD 5E FD      [19]  284 	ld	e, -3 (ix)
   0130 DD 56 FE      [19]  285 	ld	d, -2 (ix)
   0133 C5            [11]  286 	push	bc
   0134 D5            [11]  287 	push	de
   0135 CDr00r00      [17]  288 	call	_put_nvram
   0138 F1            [10]  289 	pop	af
   0139 C1            [10]  290 	pop	bc
                            291 ;nvtest.c:48: if (wp) {
   013A 79            [ 4]  292 	ld	a, c
   013B B7            [ 4]  293 	or	a, a
   013C 28 0F         [12]  294 	jr	Z,00104$
                            295 ;nvtest.c:49: rtc_WP(ON);
   013E 11 07 80      [10]  296 	ld	de, #0x8007
   0141 D5            [11]  297 	push	de
   0142 CDr00r00      [17]  298 	call	_rtc_set_loc
                            299 ;nvtest.c:50: printf("  DS1302 write protect is re-enabled\n");
   0145 21rE0r01      [10]  300 	ld	hl, #___str_7
   0148 E3            [19]  301 	ex	(sp),hl
   0149 CDr00r00      [17]  302 	call	_cprintf
   014C F1            [10]  303 	pop	af
   014D                     304 00104$:
                            305 ;nvtest.c:53: return err;
   014D DD 6E FF      [19]  306 	ld	l, -1 (ix)
   0150 26 00         [ 7]  307 	ld	h, #0x00
                            308 ;nvtest.c:54: }
   0152 DD F9         [10]  309 	ld	sp, ix
   0154 DD E1         [14]  310 	pop	ix
   0156 C9            [10]  311 	ret
   0157                     312 ___str_0:
   0157 20 20 44 53 31 33   313 	.ascii "  DS1302 write protect is %s"
        30 32 20 77 72 69
        74 65 20 70 72 6F
        74 65 63 74 20 69
        73 20 25 73
   0173 0A                  314 	.db 0x0a
   0174 00                  315 	.db 0x00
   0175                     316 ___str_1:
   0175 4F 4E               317 	.ascii "ON"
   0177 00                  318 	.db 0x00
   0178                     319 ___str_2:
   0178 4F 46 46            320 	.ascii "OFF"
   017B 00                  321 	.db 0x00
   017C                     322 ___str_3:
   017C 20 20 20 55 73 69   323 	.ascii "   Using test pattern 1"
        6E 67 20 74 65 73
        74 20 70 61 74 74
        65 72 6E 20 31
   0193 0A                  324 	.db 0x0a
   0194 00                  325 	.db 0x00
   0195                     326 ___str_4:
   0195 20 20 20 55 73 69   327 	.ascii "   Using test pattern 2"
        6E 67 20 74 65 73
        74 20 70 61 74 74
        65 72 6E 20 32
   01AC 0A                  328 	.db 0x0a
   01AD 00                  329 	.db 0x00
   01AE                     330 ___str_5:
   01AE 20 20 20 55 73 69   331 	.ascii "   Using test pattern 3"
        6E 67 20 74 65 73
        74 20 70 61 74 74
        65 72 6E 20 33
   01C5 0A                  332 	.db 0x0a
   01C6 00                  333 	.db 0x00
   01C7                     334 ___str_6:
   01C7 20 20 20 55 73 69   335 	.ascii "   Using test pattern 4"
        6E 67 20 74 65 73
        74 20 70 61 74 74
        65 72 6E 20 34
   01DE 0A                  336 	.db 0x0a
   01DF 00                  337 	.db 0x00
   01E0                     338 ___str_7:
   01E0 20 20 44 53 31 33   339 	.ascii "  DS1302 write protect is re-enabled"
        30 32 20 77 72 69
        74 65 20 70 72 6F
        74 65 63 74 20 69
        73 20 72 65 2D 65
        6E 61 62 6C 65 64
   0204 0A                  340 	.db 0x0a
   0205 00                  341 	.db 0x00
                            342 	.area _CODE
                            343 	.area _INITIALIZER
                            344 	.area _CABS (ABS)
